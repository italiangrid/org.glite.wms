#!/bin/sh

EDG_WL_LOCATION=${EDG_WL_LOCATION:-@prefix@}
. ${EDG_WL_LOCATION}/etc/edg-wl-vars.sh
. ${EDG_WL_LOCATION}/etc/profile.d/edg-wl.sh

if [ $# -ne 2 ]; then
    echo "Usage: $0 <input_file> <output_file>" >&2
    exit 1;
fi

input_file=$1;
output_file=$2;

if [ ! -r ${input_file} ]; then
    echo "${input_file} does not exist or is not readable" >&2
    exit 1
fi
# the output file may exist, just ignore it, the planner will overwrite it

planner=${EDG_WL_LOCATION}/libexec/edg-wl-planner
planned2submit=${EDG_WL_LOCATION}/libexec/edg-wl-planned2submit
logev=${EDG_WL_LOCATION}/bin/edg-wl-logev
eval_ad_expr=${EDG_WL_LOCATION}/libexec/edg-wl-eval_ad_expr

if [ ! -x ${planner} ]; then
    echo "${planner} does not exist or is not executable"
    exit 1
fi
if [ ! -x ${planned2submit} ]; then
    echo "${planned2submit} does not exist or is not executable"
    exit 1
fi
if [ ! -x ${logev} ]; then
    echo "${logev} does not exist or is not executable"
    exit 1
fi
if [ ! -x ${eval_ad_expr} ]; then
    echo "${eval_ad_expr} does not exist or is not executable"
    exit 1
fi

initial_sequence_code="UI=2:NS=0:WM=0:BH=1:JSS=0:LM=0:LRMS=0:APP=0"
sequence_code=${initial_sequence_code}

job_id=`${eval_ad_expr} ${input_file} "edg_jobid"`
if [ $? -ne 0 ]; then
    echo "Cannot get the job id" >&2
    exit 1
fi

user_proxy=`${eval_ad_expr} ${input_file} "X509UserProxy"`
if [ $? -ne 0 ]; then
    echo "Cannot get the x509 user proxy" >&2
    exit 1
fi

export X509_USER_PROXY=${user_proxy}

sequence_code=`${logev} \
    --source BigHelper \
    --jobid ${job_id} \
    --sequence ${sequence_code} \
    --event HelperCall \
    --helper_name BigHelper \
    --helper_params "${input_file}"\ "${output_file}" \
    --src_role CALLED`

status=$?
if [ ${status} -ne 0 ]; then
    echo "${logev} HelperCall failed (${status})" >&2
fi

destination_or_error=`${planner} ${input_file} ${output_file}.tmp 2>&1`

planner_status=$?
if [ ${planner_status} -eq 0 ]; then 

    sequence_code=`${logev} \
        --source BigHelper \
        --jobid ${job_id} \
        --sequence ${sequence_code} \
        --event Match \
        --dest_id ${destination_or_error}`

    status=$?
    if [ $status -ne 0 ]; then
        echo "${logev} Match failed ($status)" >&2
    fi

    ${planned2submit} ${sequence_code} ${output_file}.tmp ${output_file}
    planner_status=$?

else

    reason=`echo "Cannot plan: " ${destination_or_error}`

    echo "${planner} failed (${status}) with reason: ${reason}" >&2

    sequence_code=`${logev} \
        --source BigHelper \
        --jobid ${job_id} \
        --sequence ${sequence_code} \
        --event Abort \
        --reason "${reason}"`

    status=$?
    if [ $status -ne 0 ]; then
        echo "${logev} Abort failed ($status)" >&2
    fi

fi


sequence_code=`${logev} \
    --source BigHelper \
    --jobid ${job_id} \
    --sequence ${sequence_code} \
    --event HelperReturn \
    --helper_name BigHelper \
    --retval ${planner_status} \
    --src_role CALLED`

status=$?
if [ ${status} -ne 0 ]; then
    echo "${logev} HelperReturn failed ($status)" >&2
fi

exit ${planner_status}
