/* soapWMProxyObject.h
   Generated by gSOAP 2.7.16 from wm.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapWMProxyObject_H
#define soapWMProxyObject_H
#include "soapH.h"

/******************************************************************************\
 *                                                                            *
 * Service Object                                                             *
 *                                                                            *
\******************************************************************************/

class WMProxyService : public soap
{    public:
	WMProxyService()
	{ static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"jsdlposix", "http://schemas.ggf.org/jsdl/2005/11/jsdl-posix", NULL, NULL},
	{"jsdl", "http://schemas.ggf.org/jsdl/2005/11/jsdl", NULL, NULL},
	{"delegation1", "http://www.gridsite.org/namespaces/delegation-1", NULL, NULL},
	{"delegationns", "http://www.gridsite.org/namespaces/delegation-2", NULL, NULL},
	{"ns1", "http://glite.org/wms/wmproxy", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};

	this->namespaces = namespaces; };
	virtual ~WMProxyService() { };
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog) { return soap_bind(this, host, port, backlog); };
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept() { return soap_accept(this); };
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve() { return soap_serve(this); };
};

/******************************************************************************\
 *                                                                            *
 * Service Operations (you should define these globally)                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 delegation1__getProxyReq(struct soap*, std::string _delegationID, struct delegation1__getProxyReqResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 delegation1__putProxy(struct soap*, std::string _delegationID, std::string _proxy, struct delegation1__putProxyResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getVersion(struct soap*, struct delegationns__getVersionResponse &_param_3);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getInterfaceVersion(struct soap*, struct delegationns__getInterfaceVersionResponse &_param_4);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getServiceMetadata(struct soap*, std::string _key, struct delegationns__getServiceMetadataResponse &_param_5);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getProxyReq(struct soap*, std::string _delegationID, struct delegationns__getProxyReqResponse &_param_6);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getNewProxyReq(struct soap*, struct delegationns__getNewProxyReqResponse &_param_7);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__renewProxyReq(struct soap*, std::string _delegationID, struct delegationns__renewProxyReqResponse &_param_8);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__putProxy(struct soap*, std::string _delegationID, std::string _proxy, struct delegationns__putProxyResponse &_param_9);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__getTerminationTime(struct soap*, std::string _delegationID, struct delegationns__getTerminationTimeResponse &_param_10);

SOAP_FMAC5 int SOAP_FMAC6 delegationns__destroy(struct soap*, std::string _delegationID, struct delegationns__destroyResponse &_param_11);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getProxyReq(struct soap*, std::string _delegationID, struct ns1__getProxyReqResponse &_param_12);

SOAP_FMAC5 int SOAP_FMAC6 ns1__putProxy(struct soap*, std::string _delegationID, std::string _proxy, struct ns1__putProxyResponse &_param_13);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getVersion(struct soap*, struct ns1__getVersionResponse &_param_14);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getJDL(struct soap*, std::string _jobId, enum ns1__JdlType _type, struct ns1__getJDLResponse &_param_15);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobRegister(struct soap*, std::string _jdl, std::string _delegationId, struct ns1__jobRegisterResponse &_param_16);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobRegisterJSDL(struct soap*, jsdl__JobDefinition_USCOREType *_jsdl, std::string _delegationId, struct ns1__jobRegisterJSDLResponse &_param_17);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobStart(struct soap*, std::string _jobId, struct ns1__jobStartResponse &_param_18);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobSubmit(struct soap*, std::string _jdl, std::string _delegationId, struct ns1__jobSubmitResponse &_param_19);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobSubmitJSDL(struct soap*, std::string _delegationId, jsdl__JobDefinition_USCOREType *_jsdl, struct ns1__jobSubmitJSDLResponse &_param_20);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobCancel(struct soap*, std::string _jobId, struct ns1__jobCancelResponse &_param_21);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getMaxInputSandboxSize(struct soap*, struct ns1__getMaxInputSandboxSizeResponse &_param_22);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getSandboxDestURI(struct soap*, std::string _jobId, std::string _protocol, struct ns1__getSandboxDestURIResponse &_param_23);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getSandboxBulkDestURI(struct soap*, std::string _jobId, std::string _protocol, struct ns1__getSandboxBulkDestURIResponse &_param_24);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getTotalQuota(struct soap*, struct ns1__getTotalQuotaResponse &_param_25);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getFreeQuota(struct soap*, struct ns1__getFreeQuotaResponse &_param_26);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobPurge(struct soap*, std::string _jobId, struct ns1__jobPurgeResponse &_param_27);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getOutputFileList(struct soap*, std::string _jobId, std::string _protocol, struct ns1__getOutputFileListResponse &_param_28);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobListMatch(struct soap*, std::string _jdl, std::string _delegationId, struct ns1__jobListMatchResponse &_param_29);

SOAP_FMAC5 int SOAP_FMAC6 ns1__jobListMatchJSDL(struct soap*, jsdl__JobDefinition_USCOREType *_jsdl, std::string _delegationId, struct ns1__jobListMatchJSDLResponse &_param_30);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getJobTemplate(struct soap*, ns1__JobTypeList *_jobType, std::string _executable, std::string _arguments, std::string _requirements, std::string _rank, struct ns1__getJobTemplateResponse &_param_31);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getDAGTemplate(struct soap*, ns1__GraphStructType *_dependencies, std::string _requirements, std::string _rank, struct ns1__getDAGTemplateResponse &_param_32);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getCollectionTemplate(struct soap*, int _jobNumber, std::string _requirements, std::string _rank, struct ns1__getCollectionTemplateResponse &_param_33);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getIntParametricJobTemplate(struct soap*, ns1__StringList *_attributes, int _param, int _parameterStart, int _parameterStep, std::string _requirements, std::string _rank, struct ns1__getIntParametricJobTemplateResponse &_param_34);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getStringParametricJobTemplate(struct soap*, ns1__StringList *_attributes, ns1__StringList *_param, std::string _requirements, std::string _rank, struct ns1__getStringParametricJobTemplateResponse &_param_35);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getACLItems(struct soap*, std::string _jobId, struct ns1__getACLItemsResponse &_param_36);

SOAP_FMAC5 int SOAP_FMAC6 ns1__addACLItems(struct soap*, std::string _jobId, ns1__StringList *_items, struct ns1__addACLItemsResponse &_param_37);

SOAP_FMAC5 int SOAP_FMAC6 ns1__removeACLItem(struct soap*, std::string _jobId, std::string _item, struct ns1__removeACLItemResponse &_param_38);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getDelegatedProxyInfo(struct soap*, std::string _delegationID, struct ns1__getDelegatedProxyInfoResponse &_param_39);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getJobProxyInfo(struct soap*, std::string _jobId, struct ns1__getJobProxyInfoResponse &_param_40);

SOAP_FMAC5 int SOAP_FMAC6 ns1__enableFilePerusal(struct soap*, std::string _jobId, ns1__StringList *_fileList, struct ns1__enableFilePerusalResponse &_param_41);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getPerusalFiles(struct soap*, std::string _jobId, std::string _file, bool _allChunks, std::string _protocol, struct ns1__getPerusalFilesResponse &_param_42);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getTransferProtocols(struct soap*, struct ns1__getTransferProtocolsResponse &_param_43);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getJobStatus(struct soap*, std::string jobId, struct ns1__getJobStatusResponse &_param_44);

#endif
