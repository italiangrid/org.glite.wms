<?xml version="1.0"?>
<!--
	Copyright (c) 2004 on behalf of the EU EGEE Project: 
	The European Organization for Nuclear Research (CERN), 
	Istituto Nazionale di Fisica Nucleare (INFN), Italy
	Datamat Spa, Italy
	Centre National de la Recherche Scientifique (CNRS), France
	CS Systeme d'Information (CSSI), France
	Royal Institute of Technology, Center for Parallel Computers (KTH-PDC), Sweden
	Universiteit van Amsterdam (UvA), Netherlands
	University of Helsinki (UH.HIP), Finland
	University of Bergen (UiB), Norway
	Council for the Central Laboratory of the Research Councils (CCLRC), United Kingdom

	GLite Middleware WMS Configuration Specification File
	
	Authors: Alberto Di Meglio <alberto.di.meglio@cern.ch>		
	         Joachim Flammer <Joachim.Flammer@cern.ch>
	Version info: $Id$
	Release: $Name$

	Revision history:
	$Log$
	Revision 1.75  2005/01/17 18:24:18  eronchie
	Start adding wmproxy
	WORK IN PROGRESS

	Revision 1.74  2004/12/15 14:16:01  eronchie
	Updated
	
	Revision 1.73  2004/12/09 10:29:26  eronchie
	Updated brokerinfo dependencies
	
	Revision 1.72  2004/12/07 18:14:39  eronchie
	Added
	
	Revision 1.71  2004/12/02 13:53:26  eronchie
	Added dependency
	
	Revision 1.70  2004/12/02 13:39:55  eronchie
	Added new component
	
	Revision 1.69  2004/10/18 22:59:37  dimeglio
	Added oscheck to various targets
	
	Revision 1.68  2004/10/15 15:08:52  eronchie
	Updated configuration
	
	Revision 1.67  2004/10/13 22:05:27  eronchie
	Added ism as manager dependency
	
	Revision 1.66  2004/10/12 15:34:16  eronchie
	Removed edg-replica-manager-client-cpp and Leave edg-replica-manager-client
	
	Revision 1.65  2004/10/12 12:59:45  eronchie
	Updated
	
	Revision 1.64  2004/10/12 11:29:08  eronchie
	Updated rls dependencies
	
	Revision 1.63  2004/10/12 11:15:37  eronchie
	Added rls as brokerinfo and broker internal dependency
	
	Revision 1.62  2004/10/12 11:05:43  eronchie
	Updated rls dependencies
	
	Revision 1.61  2004/10/12 07:29:46  eronchie
	.....
	
	Revision 1.60  2004/10/08 13:01:52  eronchie
	Updated helper
	
	Revision 1.59  2004/10/06 10:39:19  eronchie
	Updated helper file
	Removed loki
	Start adding rls
	
	Revision 1.58  2004/09/21 13:39:44  eronchie
	Updated
	
	Revision 1.57  2004/08/20 10:07:02  eronchie
	Updated buildmodules
	
	Revision 1.56  2004/08/16 15:00:04  eronchie
	Added configuration component
	
	Revision 1.55  2004/08/16 13:00:42  eronchie
	Updated
	Added interactive component
	
	Revision 1.54  2004/08/08 17:00:47  eronchie
	Start adding manager
	
	Revision 1.53  2004/08/04 07:34:45  eronchie
	Added cppunit
	
	Revision 1.52  2004/07/28 17:55:43  eronchie
	Added broker
	
	Revision 1.51  2004/07/28 17:50:55  eronchie
	Added broker
	
	Revision 1.50  2004/07/28 16:33:24  eronchie
	Start adding manager-ns-common
	WARNING: Work in progress
	
	Revision 1.49  2004/07/27 15:39:20  eronchie
	Updated dependency
	
	Revision 1.48  2004/07/26 17:53:54  eronchie
	Start adding manager-ns components
	WARNING: Work in progress
	
	Revision 1.47  2004/07/26 17:15:09  eronchie
	Start adding manager-ns component
	WARNING: work in progress
	
	Revision 1.46  2004/07/25 17:02:49  eronchie
	Renamed in condor instead of condorg
	
	Revision 1.45  2004/07/23 09:56:18  eronchie
	Removed globus_ssl_utils dependency
	It is moved out in org.glite.wms-utils
	
	Revision 1.44  2004/07/23 09:33:14  eronchie
	Changed condor in condorg
	
	Revision 1.43  2004/07/23 08:51:28  eronchie
	Removed tls, jobid, thirdparty-globus_ssl_utils
	
	Revision 1.42  2004/07/18 12:29:39  eronchie
	Start adding purger
	WARNING: work in progress
	
	Revision 1.41  2004/07/18 12:17:33  eronchie
	Start integrating purger
	
	Revision 1.40  2004/07/18 11:40:12  eronchie
	Removed temporarely condor
	
	Revision 1.39  2004/07/18 11:26:20  eronchie
	Added condorg.m4 file
	Start adding jobsubmission component
	Condor package is still missing in the repository
	
	Revision 1.38  2004/07/18 10:55:41  eronchie
	Start adding checkpointing
	WARNING: work in progress
	
	Revision 1.37  2004/07/16 16:25:44  flammer
	Added tags for automated adding of components.
	
	Revision 1.36  2004/07/14 23:17:34  dimeglio
	Added dependency of globus_ssl_utils on globus
	
	Revision 1.35  2004/07/10 07:22:06  eronchie
	Updated internal dependencies
	WARNING: work in progress
	
	Revision 1.34  2004/07/10 06:47:53  eronchie
	Updated matchmaking internal dependencies
	Added classad_plugin
	
	Revision 1.33  2004/07/10 06:23:19  eronchie
	Start adding matchmaking dependency
	WARNING: work in progress
	
	Revision 1.32  2004/07/06 08:47:22  eronchie
	Removed jobadapter
	Added helper
	jobadapter was moved in helper
	
	Revision 1.31  2004/07/06 08:43:20  eronchie
	Updated m4 file
	Added new components
	
	Revision 1.30  2004/06/28 23:08:57  eronchie
	Start adding new component
	brokerinfo
	classad_plugin
	matchmaking
	
	Revision 1.29  2004/06/26 13:49:09  eronchie
	Temporarely removed classad_plugin
	work in progress
	
	Revision 1.28  2004/06/26 13:07:35  eronchie
	*** empty log message ***
	
	Revision 1.27  2004/05/26 19:35:04  eronchie
	Added new sub-module org.glite.wms.jdl
	
	Revision 1.26  2004/05/26 18:52:55  eronchie
	Added new sub-module org.glite.wms.jobid
	
	Revision 1.25  2004/05/26 18:27:46  eronchie
	Added sub-module org.glite.wms.tls
	
	Revision 1.24  2004/05/25 11:42:46  eronchie
	Removed jcommon and added jdlj
	
	Revision 1.23  2004/05/19 23:21:45  dimeglio
	Fixed errors in wms component CVS targets
	
	Revision 1.22  2004/05/19 22:34:25  dimeglio
	Environmental checks are implemented in the global file
	
	Revision 1.21  2004/05/19 22:01:13  dimeglio
	Removed old unless condition
	
	Revision 1.20  2004/05/19 21:56:03  dimeglio
	Removed old update conditions
	
	Revision 1.19  2004/05/19 21:48:59  dimeglio
	Modifed logic to check out CVS modules
	
	Revision 1.18  2004/05/18 10:17:54  dimeglio
	Modified not to use -r HEAD when checking out modules from HEAD
	
	Revision 1.17  2004/05/17 16:22:12  flammer
	Unification of variable naming.
	
	Revision 1.16  2004/05/13 23:40:56  dimeglio
	Removed one occurrence of Test2 WMS
	
	Revision 1.15  2004/05/13 23:07:19  dimeglio
	Added ant-contrib target
	Replaced workspace.abs.dir with workspace.dir
	
	Revision 1.14  2004/05/13 19:37:04  dimeglio
	Changed all occurrences of EGEE or egee to GLite and glite
	
	Revision 1.13  2004/05/13 18:35:11  flammer
	Added missing dependencies. Deleted duplicated external dependencies.
	
	Revision 1.12  2004/05/13 09:46:58  flammer
	Moved to variable naming & include style.
	
	Revision 1.11  2004/05/05 23:21:04  dimeglio
	Updated Jalopy dependencies
	
	Revision 1.10  2004/05/05 23:05:17  dimeglio
	Removed import of external dependencies file, dependencies are
	explicitly set. This is necessary to be able to run the subsystem CSF
	without extracting org.egee manually
	
	Revision 1.9  2004/05/03 00:30:57  dimeglio
	Added jcommon component to subsystem dependencies
	
	Revision 1.8  2004/05/03 00:28:12  dimeglio
	Added jcommon component to subsystem dependencies
	
	Revision 1.7  2004/04/29 04:36:56  dimeglio
	Fixed dependency spelling errors
	
	Revision 1.6  2004/04/29 04:05:04  dimeglio
	Moved user property look up before dependencies properties
	
	Revision 1.5  2004/04/29 03:39:47  dimeglio
	Added Import of  user and project properties
	
	Revision 1.4  2004/04/29 03:30:23  dimeglio
	Replaced list of dependencies with common dependencies file
	
	Revision 1.3  2004/04/29 02:43:34  dimeglio
	Added check for presence of junit.runner class
	
	Revision 1.2  2004/04/29 01:42:09  dimeglio
	Added dependencies to csf files
	
	Revision 1.1  2004/04/29 01:36:29  dimeglio
	Added org.egee.test3.wms
	
-->

<project name="GLite Middleware WMS CSF" default="all">

	<!-- overwrite default workspace directory -->
	<property name="workspace.dir" value="../.." />

	<!-- ===============================================
		 Load properties
		 =============================================== -->

	<!-- load baseline and user properties -->
	<import file="${workspace.dir}/org.glite/project/baseline.properties.xml" />

	<!-- define build properties file location since we are already in project dir -->
	<property name="subsystem.build.properties.file" value="./build.properties" />

	<!-- Load subsytem-specific property files -->
	<import file="./properties.xml"/>

	<!-- load global properties -->
	<import file="${global.properties.file}" />

	<!-- ===============================================
		 Load dependencies 
		 =============================================== -->

	<!-- Load user dependencies file -->
	<property file="${user.dependencies.file}" />
		
	<!-- Load subsystem dependencies file -->
	<property file="./dependencies.properties" />

	<!-- Load global dependencies file -->
	<property file="${global.dependencies.file}" />

	<!-- ===============================================
		 Load targets 
		 =============================================== -->
	<import file="${global.targets-envchecks.file}" />
	<import file="${global.targets-external-dependencies.file}" />

	<!-- ===============================================
		 Evaluate CVS tags
		 =============================================== -->

    	<target name="evaluate.cvs.tags" description="Figure out if we need tagged CVS checkout">
		<condition property="glite.head">
			<and>
				<equals arg1="${org.glite.version}" arg2="HEAD" />
				<or>
					<istrue value="${update}" />
					<not>
						<available file="${global.dependencies.file}" type="file" />
					</not>
				</or>
			</and>
		</condition>
		<condition property="glite.tag">
			<and>
				<not>
					<equals arg1="${org.glite.version}" arg2="HEAD" />
				</not>
				<or>
					<istrue value="${update}" />
					<not>
						<available file="${global.dependencies.file}" type="file" />
					</not>
				</or>
			</and>
		</condition>
		<condition property="glite-wms.head">
			<and>
				<equals arg1="${org.glite.wms.version}" arg2="HEAD" />
				<istrue value="${update}" />
			</and>
		</condition>
		<condition property="glite-wms.tag">
			<and>
				<not>
					<equals arg1="${org.glite.wms.version}" arg2="HEAD" />
				</not>
				<istrue value="${update}" />
			</and>
		</condition>
	
		<!-- condition property tag = do not remove = -->

		<condition property="thirdparty-globus_gridftp_server.head">
			<equals arg1="${org.glite.wms.thirdparty-globus_gridftp_server.version}" arg2="HEAD" />
		</condition>

		<condition property="thirdparty-bypass.head">
			<equals arg1="${org.glite.wms.thirdparty-bypass.version}" arg2="HEAD" />
		</condition>

		<condition property="common.head">
			<equals arg1="${org.glite.wms.common.version}" arg2="HEAD" />
		</condition>

		<condition property="jdl.head">
                        <equals arg1="${org.glite.wms.jdl.version}" arg2="HEAD" />
                </condition>

		<condition property="jdlj.head">
			<equals arg1="${org.glite.wms.jdlj.version}" arg2="HEAD" />
		</condition>

		<condition property="brokerinfo.head">
                        <equals arg1="${org.glite.wms.brokerinfo.version}" arg2="HEAD" />
                </condition>

		<condition property="brokerinfo-access.head">
                        <equals arg1="${org.glite.wms.brokerinfo-access.version}" arg2="HEAD" />
                </condition>

		<condition property="classad_plugin.head">
                        <equals arg1="${org.glite.wms.classad_plugin.version}" arg2="HEAD" />
                </condition>

		<condition property="matchmaking.head">
                        <equals arg1="${org.glite.wms.matchmaking.version}" arg2="HEAD" />
                </condition>

		<condition property="helper.head">
                        <equals arg1="${org.glite.wms.helper.version}" arg2="HEAD" />
                </condition>

		<condition property="broker.head">
                        <equals arg1="${org.glite.wms.broker.version}" arg2="HEAD" />
                </condition>

		<condition property="checkpointing.head">
                        <equals arg1="${org.glite.wms.checkpointing.version}" arg2="HEAD" />
                </condition>

		<condition property="rls.head">
                        <equals arg1="${org.glite.wms.rls.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-fsm.head">
                        <equals arg1="${org.glite.wms.manager-ns-fsm.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-versions.head">
                        <equals arg1="${org.glite.wms.manager-ns-versions.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-common.head">
                        <equals arg1="${org.glite.wms.manager-ns-common.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-commands.head">
                        <equals arg1="${org.glite.wms.manager-ns-commands.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-client.head">
                        <equals arg1="${org.glite.wms.manager-ns-client.version}" arg2="HEAD" />
                </condition>

		<condition property="manager-ns-daemon.head">
                        <equals arg1="${org.glite.wms.manager-ns-daemon.version}" arg2="HEAD" />
                </condition>

		<condition property="jobsubmission.head">
                        <equals arg1="${org.glite.wms.jobsubmission.version}" arg2="HEAD" />
                </condition>

		<condition property="ism.head">
                        <equals arg1="${org.glite.wms.ism.version}" arg2="HEAD" />
                </condition>

		<condition property="manager.head">
                        <equals arg1="${org.glite.wms.manager.version}" arg2="HEAD" />
                </condition>

		<condition property="purger.head">
                        <equals arg1="${org.glite.wms.purger.version}" arg2="HEAD" />
                </condition>

		<condition property="interactive.head">
                        <equals arg1="${org.glite.wms.interactive.version}" arg2="HEAD" />
                </condition>

		<condition property="configuration.head">
                        <equals arg1="${org.glite.wms.configuration.version}" arg2="HEAD" />
                </condition>

		<condition property="wmproxy-interface.head">
                        <equals arg1="${org.glite.wms.wmproxy-interface.version}" arg2="HEAD" />
                </condition>

		<condition property="wmproxy-api-java.head">
                        <equals arg1="${org.glite.wms.wmproxy-api-java.version}" arg2="HEAD" />
                </condition>
    	</target>

    	<presetdef name="cvs-co">
		<cvs command="checkout" dest="${workspace.dir}" />
    	</presetdef>

	<!-- =====================================================
		 Self-update if required
		 ===================================================== -->
		
	<!-- Update main GLite module -->
 	<target name="org.glite" depends="get.glite.head, get.glite.tag"/>
	<target name="get.glite.head" if="glite.head">
		<cvs-co package="org.glite" />
	</target>
	<target name="get.glite.tag" if="glite.tag">
		<cvs-co package="org.glite"
			tag="${org.glite.version}" />
	</target>

	<!-- Update the current module -->
 	<target name="org.glite.wms" depends="get.glite-wms.head, get.glite-wms.tag"/>
	<target name="get.glite-wms.head" if="glite-wms.head">
		<cvs-co package="org.glite.wms" />
		<fail>The org.glite and org.glite.wms modules have been updated, please rerun the configuration file</fail>
	</target>
	<target name="get.glite-wms.tag" if="glite-wms.tag">
		<cvs-co package="org.glite.wms"
			tag="${org.glite.wms.version}" />
		<fail>The org.glite and org.glite.wms modules have been updated, please rerun the configuration file</fail>
	</target>

	<!-- *****************************************************-->
	<!-- Development tools                                    -->
	<!-- *****************************************************-->
	
	<!-- All development tools -->
 	<target name="devtools" depends="oscheck,
 					 junitcheck,
	 				 junit,
  				         chkstyle,
 					 jalopy,
 					 ant-contrib,
 					 cpptasks,
 					 egee-ant-ext"/>		
	
	<!-- =====================================================
		 External libraries
		 ===================================================== -->
	
	<!--  All external libraries -->
 	<target name="external" depends="oscheck,
 									 log4j"/>
 	
	<!-- =====================================================
		 GLite WMS modules
		 ===================================================== -->

	<!-- component targets tag = do not remove = -->

	<!-- ByPass -->
 	<target name="thirdparty-bypass" depends="get.thirdparty-bypass.head, get.thirdparty-bypass.tag"/>
	<target name="get.thirdparty-bypass.head" if="thirdparty-bypass.head">
		<cvs-co package="org.glite.wms.thirdparty-bypass" />
	</target>
	<target name="get.thirdparty-bypass.tag" unless="thirdparty-bypass.head">
		<cvs-co package="org.glite.wms.thirdparty-bypass"
			tag="${org.glite.wms.thirdparty-bypass.version}" />
	</target>

	<!-- Globus GridFTP Server -->
 	<target name="thirdparty-globus_gridftp_server" depends="globus,get.thirdparty-globus_gridftp_server.head, get.thirdparty-globus_gridftp_server.tag"/>
	<target name="get.thirdparty-globus_gridftp_server.head" if="thirdparty-globus_gridftp_server.head">
		<cvs-co package="org.glite.wms.thirdparty-globus_gridftp_server" />
	</target>
	<target name="get.thirdparty-globus_gridftp_server.tag" unless="thirdparty-globus_gridftp_server.head">
		<cvs-co package="org.glite.wms.thirdparty-globus_gridftp_server"
			tag="${org.glite.wms.thirdparty-globus_gridftp_server.version}" />
	</target>

	<!-- Common -->
 	<target name="common" depends="boost,classads,globus,cppunit,get.common.head, get.common.tag"/>
	<target name="get.common.head" if="common.head">
		<cvs-co package="org.glite.wms.common" />
	</target>
	<target name="get.common.tag" unless="common.head">
		<cvs-co package="org.glite.wms.common"
			tag="${org.glite.wms.common.version}" />
	</target>

	<!-- Jdl -->
    	<target name="jdl" depends="boost,classads,globus,get.jdl.head, get.jdl.tag"/>
    	<target name="get.jdl.head" if="jdl.head">
            <cvs-co package="org.glite.wms.jdl" />
    	</target>
    	<target name="get.jdl.tag" unless="jdl.head">
            <cvs-co package="org.glite.wms.jdl"
                    tag="${org.glite.wms.jdl.version}" />
    	</target>

	<!-- Jdlj -->
 	<target name="jdlj" depends="jclassads,get.jdlj.head, get.jdlj.tag"/>
	<target name="get.jdlj.head" if="jdlj.head">
		<cvs-co package="org.glite.wms.jdlj" />
	</target>
	<target name="get.jdlj.tag" unless="jdlj.head">
		<cvs-co package="org.glite.wms.jdlj"
			tag="${org.glite.wms.jdlj.version}" />
	</target>

	<!-- Brokerinfo -->
    	<target name="brokerinfo" depends="boost,classads,globus,common,jdl,rls, cgsi-gsoap, gsoap, get.brokerinfo.head, get.brokerinfo.tag"/>
    	<target name="get.brokerinfo.head" if="brokerinfo.head">
            <cvs-co package="org.glite.wms.brokerinfo" />
    	</target>
    	<target name="get.brokerinfo.tag" unless="brokerinfo.head">
            <cvs-co package="org.glite.wms.brokerinfo"
                    tag="${org.glite.wms.brokerinfo.version}" />
    	</target>

	<!-- Brokerinfo Access -->
        <target name="brokerinfo-access" depends="classads, get.brokerinfo-access.head, get.brokerinfo-access.tag"/>
        <target name="get.brokerinfo-access.head" if="brokerinfo-access.head">
            <cvs-co package="org.glite.wms.brokerinfo-access" />
        </target>
        <target name="get.brokerinfo-access.tag" unless="brokerinfo-access.head">
            <cvs-co package="org.glite.wms.brokerinfo-access"
                    tag="${org.glite.wms.brokerinfo-access.version}" />
        </target>

	<!-- ClassAdPlugin -->
    	<target name="classad_plugin" depends="boost,classads,globus,common,brokerinfo,get.classad_plugin.head, get.classad_plugin.tag"/>
    	<target name="get.classad_plugin.head" if="classad_plugin.head">
            <cvs-co package="org.glite.wms.classad_plugin" />
    	</target>
    	<target name="get.classad_plugin.tag" unless="classad_plugin.head">
            <cvs-co package="org.glite.wms.classad_plugin"
                    tag="${org.glite.wms.classad_plugin.version}" />
    	</target>

	<!-- Matchmaking -->
    	<target name="matchmaking" depends="boost,classads,globus,common,classad_plugin,ism,get.matchmaking.head, get.matchmaking.tag"/>
    	<target name="get.matchmaking.head" if="matchmaking.head">
            <cvs-co package="org.glite.wms.matchmaking" />
    	</target>
    	<target name="get.matchmaking.tag" unless="matchmaking.head">
            <cvs-co package="org.glite.wms.matchmaking"
                    tag="${org.glite.wms.matchmaking.version}" />
    	</target>

	<!-- Helper -->
    	<target name="helper" depends="boost,classads,globus,common,jdl,matchmaking,broker,get.helper.head, get.helper.tag"/>
    	<target name="get.helper.head" if="helper.head">
            <cvs-co package="org.glite.wms.helper" />
    	</target>
    	<target name="get.helper.tag" unless="helper.head">
            <cvs-co package="org.glite.wms.helper"
                    tag="${org.glite.wms.helper.version}" />
    	</target>

	<!-- Broker -->
    	<target name="broker" depends="boost,classads,globus,common,jdl,rls,get.broker.head, get.broker.tag"/>
    	<target name="get.broker.head" if="broker.head">
            <cvs-co package="org.glite.wms.broker" />
    	</target>
    	<target name="get.broker.tag" unless="broker.head">
            <cvs-co package="org.glite.wms.broker"
                    tag="${org.glite.wms.broker.version}" />
	</target>

	<!-- CheckPointing -->
        <target name="checkpointing" depends="boost,classads,common,get.checkpointing.head, get.checkpointing.tag"/>
        <target name="get.checkpointing.head" if="checkpointing.head">
            <cvs-co package="org.glite.wms.checkpointing" />
        </target>
        <target name="get.checkpointing.tag" unless="checkpointing.head">
            <cvs-co package="org.glite.wms.checkpointing"
                    tag="${org.glite.wms.checkpointing.version}" />
        </target>

	<!-- RLS -->
        <target name="rls" depends="boost, edg-replica-location-client-cpp, edg-replica-optimization-client-cpp, edg-replica-metadata-catalog-client-cpp, edg-gsoap-base, edg-replica-manager-client, get.rls.head, get.rls.tag"/>
        <target name="get.rls.head" if="rls.head">
            <cvs-co package="org.glite.wms.rls" />
        </target>
        <target name="get.rls.tag" unless="rls.head">
            <cvs-co package="org.glite.wms.rls"
                    tag="${org.glite.wms.rls.version}" />
        </target>

        <!-- Manager NS Client -->
        <target name="manager-ns-client" depends="boost, classads, globus, manager-ns-commands, get.manager-ns-client.head, get.manager-ns-client.tag"/>
        <target name="get.manager-ns-client.head" if="manager-ns-client.head">
            <cvs-co package="org.glite.wms.manager-ns-client" />
        </target>
        <target name="get.manager-ns-client.tag" unless="manager-ns-client.head">
            <cvs-co package="org.glite.wms.manager-ns-client"
                    tag="${org.glite.wms.manager-ns-client.version}" />
        </target>

	<!-- Manager NS Common -->
        <target name="manager-ns-common" depends="get.manager-ns-common.head, get.manager-ns-common.tag"/>
        <target name="get.manager-ns-common.head" if="manager-ns-common.head">
            <cvs-co package="org.glite.wms.manager-ns-common" />
        </target>
        <target name="get.manager-ns-common.tag" unless="manager-ns-common.head">
            <cvs-co package="org.glite.wms.manager-ns-common"
                    tag="${org.glite.wms.manager-ns-common.version}" />
        </target>

	<!-- Manager NS Commands -->
        <target name="manager-ns-commands" depends="boost, classads, globus, manager-ns-fsm, manager-ns-versions, manager-ns-common,broker,purger,get.manager-ns-commands.head, get.manager-ns-commands.tag"/>
        <target name="get.manager-ns-commands.head" if="manager-ns-commands.head">
            <cvs-co package="org.glite.wms.manager-ns-commands" />
        </target>
        <target name="get.manager-ns-commands.tag" unless="manager-ns-commands.head">
            <cvs-co package="org.glite.wms.manager-ns-commands"
                    tag="${org.glite.wms.manager-ns-commands.version}" />
        </target>

	<!-- Manager NS Daemon -->
        <target name="manager-ns-daemon" depends="boost, classads, globus, manager-ns-commands, configuration, get.manager-ns-daemon.head, get.manager-ns-daemon.tag"/>
        <target name="get.manager-ns-daemon.head" if="manager-ns-daemon.head">
            <cvs-co package="org.glite.wms.manager-ns-daemon" />
        </target>
        <target name="get.manager-ns-daemon.tag" unless="manager-ns-daemon.head">
            <cvs-co package="org.glite.wms.manager-ns-daemon"
                    tag="${org.glite.wms.manager-ns-daemon.version}" />
        </target>

	<!-- Manager NS FSM -->
        <target name="manager-ns-fsm" depends="boost, classads, globus, get.manager-ns-fsm.head, get.manager-ns-fsm.tag"/>
        <target name="get.manager-ns-fsm.head" if="manager-ns-fsm.head">
            <cvs-co package="org.glite.wms.manager-ns-fsm" />
        </target>
        <target name="get.manager-ns-fsm.tag" unless="manager-ns-fsm.head">
            <cvs-co package="org.glite.wms.manager-ns-fsm"
                    tag="${org.glite.wms.manager-ns-fsm.version}" />
        </target>

	<!-- Manager NS Versions -->
        <target name="manager-ns-versions" depends="get.manager-ns-versions.head, get.manager-ns-versions.tag"/>
        <target name="get.manager-ns-versions.head" if="manager-ns-versions.head">
            <cvs-co package="org.glite.wms.manager-ns-versions" />
        </target>
        <target name="get.manager-ns-versions.tag" unless="manager-ns-versions.head">
            <cvs-co package="org.glite.wms.manager-ns-versions"
                    tag="${org.glite.wms.manager-ns-versions.version}" />
        </target>

	<!-- purger -->
        <target name="purger" depends="boost,classads,globus,common,get.purger.head, get.purger.tag"/>
        <target name="get.purger.head" if="purger.head">
            <cvs-co package="org.glite.wms.purger" />
        </target>
        <target name="get.purger.tag" unless="purger.head">
            <cvs-co package="org.glite.wms.purger"
                    tag="${org.glite.wms.purger.version}" />
        </target>

	<!-- JobSubmission -->
        <target name="jobsubmission" depends="boost,classads,globus,condor,common,jdl,purger,configuration,get.jobsubmission.head, get.jobsubmission.tag"/>
        <target name="get.jobsubmission.head" if="jobsubmission.head">
            <cvs-co package="org.glite.wms.jobsubmission" />
        </target>
        <target name="get.jobsubmission.tag" unless="jobsubmission.head">
            <cvs-co package="org.glite.wms.jobsubmission"
                    tag="${org.glite.wms.jobsubmission.version}" />
        </target>	

	<!-- ism -->
        <target name="ism" depends="boost,classads,get.ism.head, get.ism.tag"/>
        <target name="get.ism.head" if="ism.head">
            <cvs-co package="org.glite.wms.ism" />
        </target>
        <target name="get.ism.tag" unless="ism.head">
            <cvs-co package="org.glite.wms.ism"
                    tag="${org.glite.wms.ism.version}" />
        </target>

	<!-- Manager -->
        <target name="manager" depends="boost,classads,globus,expat,ares,common,jdl,purger,helper,jobsubmission,ism,configuration,get.manager.head, get.manager.tag"/>
        <target name="get.manager.head" if="manager.head">
            <cvs-co package="org.glite.wms.manager" />
        </target>
        <target name="get.manager.tag" unless="manager.head">
            <cvs-co package="org.glite.wms.manager"
                    tag="${org.glite.wms.manager.version}" />
        </target>

	<!-- Interactive -->
        <target name="interactive" depends="globus,thirdparty-bypass,get.interactive.head, get.interactive.tag"/>
        <target name="get.interactive.head" if="interactive.head">
            <cvs-co package="org.glite.wms.interactive" />
        </target>
        <target name="get.interactive.tag" unless="interactive.head">
            <cvs-co package="org.glite.wms.interactive"
                    tag="${org.glite.wms.interactive.version}" />
        </target>

	<!-- Configuration -->
        <target name="configuration" depends="globus,get.configuration.head, get.configuration.tag"/>
        <target name="get.configuration.head" if="configuration.head">
            <cvs-co package="org.glite.wms.configuration" />
        </target>
        <target name="get.configuration.tag" unless="configuration.head">
            <cvs-co package="org.glite.wms.configuration"
                    tag="${org.glite.wms.configuration.version}" />
        </target>

	 <!-- WMPROXY Interface -->
        <target name="wmproxy-interface" depends="get.wmproxy-interface.head, get.wmproxy-interface.tag"/>
        <target name="get.wmproxy-interface.head" if="wmproxy-interface.head">
            <cvs-co package="org.glite.wms.wmproxy-interface" />
        </target>
        <target name="get.wmproxy-interface.tag" unless="wmproxy-interface.head">
            <cvs-co package="org.glite.wms.wmproxy-interface"
                    tag="${org.glite.wms.wmproxy-interface.version}" />
        </target>

	<!-- WMPROXY Api Java -->
        <target name="wmproxy-api-java" depends="axis,get.wmproxy-api-java.head, get.wmproxy-api-java.tag"/>
        <target name="get.wmproxy-api-java.head" if="wmproxy-api-java.head">
            <cvs-co package="org.glite.wms.wmproxy-api-java" />
        </target>
        <target name="get.wmproxy-api-java.tag" unless="wmproxy-api-java.head">
            <cvs-co package="org.glite.wms.wmproxy-api-java"
                    tag="${org.glite.wms.wmproxy-api-java.version}" />
        </target>
		
	<!-- All project modules -->
 	<target name="project" depends="configuration,
  				        thirdparty-globus_gridftp_server,
					thirdparty-bypass,
					interactive,
				        common,
					jdl,
 				        jdlj,
					brokerinfo,
					brokerinfo-access,
					classad_plugin,
					rls,
					matchmaking,
					broker,
					helper,
					checkpointing,
					purger,
					manager-ns-fsm,
					manager-ns-versions,
					manager-ns-common,
					manager-ns-commands,
					manager-ns-client,
					manager-ns-daemon,
					jobsubmission,
					ism,
					wmproxy,
                                        wmproxy-interface,
                                        wmproxy-api-cpp,
                                        wmproxy-api-java,
					manager"/>


	<!-- ====================================================
		 Checkout all
		 ==================================================== -->
	
	<!-- All libraries -->
 	<target name="all" depends="oscheck,evaluate.cvs.tags,defaultenvchecks,org.glite,org.glite.wms,devtools,external,project" />		

	<!-- ====================================================
		 Print dependecies to console
		 ==================================================== -->
	
 	<target name="dependencies">
 		<concat>
 			<fileset dir="." includes="dependencies.properties" />
 		</concat>
 	</target>		

</project>
