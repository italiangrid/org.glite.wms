<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Copyright (c) 2004 on behalf of the EU EGEE Project: 
	The European Organization for Nuclear Research (CERN), 
	Istituto Nazionale di Fisica Nucleare (INFN), Italy
	Datamat Spa, Italy
	Centre National de la Recherche Scientifique (CNRS), France
	CS Systeme d'Information (CSSI), France
	Royal Institute of Technology, Center for Parallel Computers (KTH-PDC), Sweden
	Universiteit van Amsterdam (UvA), Netherlands
	University of Helsinki (UH.HIP), Finland
	University of Bergen (UiB), Norway
	Council for the Central Laboratory of the Research Councils (CCLRC), United Kingdom

	Build file for the EGEE Middleware Test 3 WMS Subsystem
	
	Authors: Alberto Di Meglio <alberto.di.meglio@cern.ch>		
	Version info: $Id$
	Release: $Name$

	Revision history:
	$Log$
	Revision 1.8  2004/05/13 14:26:25  flammer
	Corrected target include.

	Revision 1.7  2004/05/13 09:45:47  flammer
	Moved to new variable naming & including style.
	
	Revision 1.6  2004/05/05 17:05:25  dimeglio
	Implemented stage and dist targets for the project
	Dist is new default target (warning: this may change)
	
	Revision 1.5  2004/05/03 00:37:00  dimeglio
	Removed XML comment sequence in CVS log entry
	
	Revision 1.4  2004/05/03 00:24:58  dimeglio
	Fixed module name error (common > jcommon)
	
	Revision 1.3  2004/04/30 18:05:34  eronchie
	Added jclassads dependency
	Added jcommon dependency
	
	Revision 1.2  2004/04/30 16:22:06  eronchie
	Added stage target
	Added stage, distsrc, and distbin targets
	Added DISTBIN, and WORKDIR
	
	Revision 1.1  2004/04/29 01:36:29  dimeglio
	Added org.egee.test3.wms
	
-->

<project name="test3-wms" default="dist">

	<description>
		Ant build file to build the EGEE Test 3 WMS
	</description>
	
	<!-- =========================================
	     Import properties (order is important) 
		 ========================================= -->
	<import file="../org.egee/project/baseline.properties.xml" />
	<import file="./project/properties.xml" />	
	<import file="${global.properties.file}" />
				
	<!-- =========================================
		 Load dependencies properties files (order is important) 
		 ========================================= -->
	<property file="${user.dependencies.file}"/>
	<property file="${subsystem.dependencies.file}"/>
	<property file="${global.dependencies.file}"/>	
	
	<!-- =========================================
		 Import external dependencies files (order is important) 
		========================================= -->
	<!-- <import file="${subsystem.external-dependencies.file}"/> 	-->
	<import file="${global.external-dependencies.file}"/>	
		
	<!-- =========================================
		 Import task definitions (order is important)
		 ========================================= -->
	<!-- <import file="${subsystem.taskdefs.file}" /> -->
	<import file="${global.taskdefs.file}" />
	
	<!-- =========================================
	     Import compiler definitions (order is important)
  	     ========================================= -->
	<!-- <import file="${subsystem.compilerdefs.file}" /> -->
	<import file="${global.compilerdefs.file}" />
		
	<!-- =========================================
		 Default envchecks (order is important)
		 ========================================= -->
	<!-- <import file="${subsystem.envchecks.file}" /> -->
	<import file="${global.envchecks.file}" />

	<!-- =========================================
		 Load version file 
		 ========================================= -->
	<property file="${version.file}"/>
	
	<!-- ===============================================
		  Public common targets
	  	 =============================================== -->
	
	<target name="envinfo">
		<!-- Workspace paths -->
		<echo>*****************************************************************</echo>
		<echo>*****************************************************************</echo>
		<echo>****** ${subsystem.name}	</echo>
		<echo>*****************************************************************</echo>
		<echo>*****************************************************************</echo>
		<echo>  </echo>
		<echo>Global project path:	${global.dir}</echo>
		<echo>Global project name:	${global.name}</echo>
		<echo>Subsystem name:		${subsystem.name}</echo>
	</target>

	<target name="envcheck" unless="checks.done"
		description="Check environment configuration">

		<antcall target="envinfo" />
		<antcall target="defaultenvchecks" />
	</target>


	<target name="localinit" depends="envcheck">
	</target>

	<target name="init" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="init"/>
		</antcall>
	</target>

	<target name="checkstyle" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="checkstyle"/>
		</antcall>
	</target>

	<target name="compile" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="compile"/>
		</antcall>
	</target>

	<target name="compiletest" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="compiletest"/>
		</antcall>
	</target>

	<target name="unittest" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="unittest"/>
		</antcall>
	</target>

	<target name="unitcoverage" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="unitcoverage"/>
		</antcall>
	</target>

	<target name="doc" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="doc"/>
		</antcall>
	</target>

    <target name="stage" depends="localinit">
            <antcall target="buildmodules">
                    <param name="target" value="stage"/>
            </antcall>
    </target>

	<target name="dist" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="dist"/>
		</antcall>
	</target>

	<target name="install" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="install"/>
		</antcall>
	</target>

	<target name="tag" depends="clean">

		<!-- This target is not recursive
			 It is only used to set private tags
			 Tagging is done by the build system -->
		<!-- TODO -->		

	</target>

	<target name="clean">

		<property name="offline.repository" value="true" />
		<antcall target="buildmodules">
			<param name="target" value="clean"/>
		</antcall>

		<delete dir="${module.bin.dir}" />
		<delete dir="${module.lib.dir}" />
		<delete dir="${module.autosrc.dir}" />
		<delete dir="${module.autodoc.dir}" />
		<delete dir="${module.test.reports.dir}" />

	</target>

	<!-- ===============================================
		 Private targets
	     =============================================== -->
	
	<!-- ===============================================
		 Modules proxy targets
	     =============================================== -->

	<target name="globus_ssl_utils">
		<ant dir="${workspace.abs.dir}/${subsystem.name}.thirdparty-globus_ssl_utils"
		     target="${target}"
		     inheritall="false" />
	</target>

	<target name="bypass">
		<ant dir="${workspace.abs.dir}/${subsystem.name}.thirdparty-bypass"
		     target="${target}"
                     inheritall="false" />
	</target>

	<target name="globus_gridftp_server" depends="globus">
		<ant dir="${workspace.abs.dir}/${subsystem.name}.thirdparty-globus_gridftp_server"
		     target="${target}"
                     inheritall="false" />
	</target>

	<target name="loki">
		<ant dir="${workspace.abs.dir}/${subsystem.name}.thirdparty-loki"
		     target="${target}"
                     inheritall="false" />
	</target>

	<target name="common" depends="boost,classads,globus,globus_ssl_utils">
		<ant dir="${workspace.abs.dir}/${subsystem.name}.common"
		     target="${target}"
                     inheritall="false" />
	</target>

        <target name="jcommon" depends="jclassads">
                <ant dir="${workspace.abs.dir}/${subsystem.name}.jcommon"
		     target="${target}"
                     inheritall="false" />
        </target>

	<!-- Main proxy -->
	<target name="buildmodules" depends="globus_ssl_utils,
					     bypass,
   					     globus_gridftp_server,
  					     loki,
					     common, 
						 jcommon" />
		
</project>
