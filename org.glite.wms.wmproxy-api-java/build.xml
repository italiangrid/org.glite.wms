<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Copyright (c) 2004 on behalf of the EU EGEE Project: 
	The European Organization for Nuclear Research (CERN), 
	Istituto Nazionale di Fisica Nucleare (INFN), Italy
	Datamat Spa, Italy
	Centre National de la Recherche Scientifique (CNRS), France
	CS Systeme d'Information (CSSI), France
	Royal Institute of Technology, Center for Parallel Computers (KTH-PDC), Sweden
	Universiteit van Amsterdam (UvA), Netherlands
	University of Helsinki (UH.HIP), Finland
	University of Bergen (UiB), Norway
	Council for the Central Laboratory of the Research Councils (CCLRC), United Kingdom

	Build file for the GLite ce cream-api-java component
	
	Authors: Luigi Zangrando <luigi.zangrando@pd.infn.it>	
	Version info: $Id$
	Release: $Name$

	
-->

<project name="wmproxy-api-java" default="dist">

	<!-- ==============================================
	      Builds the GLite wms wmproxy-api-java component
	     ============================================== -->

	
	<!-- =========================================
	      Import properties (order is important)
	     ========================================= -->
	
	<!-- Import baseline properties & user properties -->
	<import file="../org.glite/project/baseline.properties.xml" />

	<!-- import component build properties,
		        component properties &
		        component common properties -->
	<import file="./project/properties.xml"/>
	
	<!-- import subsystem build properties,
		        subsystem properties &
		        subsystem common properties -->
	<import file="${subsystem.properties.file}"/>

	<!-- import global build properties &
		        global properties -->
	<import file="${global.properties.file}" />
		
	<!-- =========================================
 	      Load dependency property files (order is important)
	     ========================================= -->
	<property file="${user.dependencies.file}"/>
	<property file="${component.dependencies.file}" />
	<property file="${subsystem.dependencies.file}" />
	<property file="${global.dependencies.file}"/>

	<!-- =========================================
                 Load configuration definitions (order is important)
             ========================================= -->
        <import file="${global.configure.options.file}"/>
        <import file="${component.configure.options.file}"/>
	
	<!-- =========================================
      	      Import task definitions (order is important)
	     ========================================= -->
	<import file="${subsystem.taskdefs.file}" />
	<import file="${global.taskdefs.file}" />
	
        <taskdef name="wsdl2java" classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask"
         loaderref="axis" >
            <classpath refid="ext.axis.classpath"/>
        </taskdef>

	<!-- =========================================
		 Load common targets
	     ========================================= -->
	<import file="${global.targets-java.file}" />
		
	<!-- =========================================
		 Load version file 
	     ========================================= -->
	<property file="${module.version.file}"/>
	<property file="${module.build.file}"/>
	
	<!-- ==============================================
		 Local private targets
	     ============================================== -->
	
        <path id="compile.classpath">
            <path refid="ext.axis.classpath"/>
            <path refid="stage.classpath"/>
            <path refid="ext.log4j.classpath"/>
            <pathelement location="${repository}/${ext.junit.subdir}/${ext.junit.rep.file}"/>
            <pathelement location="${repository}/${ext.jclassads.subdir}/${ext.jclassads.rep.file}"/>
            <pathelement location="${stage.java.dir}/glite-security-delegation-java.jar"/>
            <pathelement location="${module.classes.dir}"/>
            <pathelement location="${module.autosrc.dir}"/>
        </path>

        <path id="test.classpath">
            <path refid="ext.axis.classpath"/>
            <pathelement location="${repository}/${ext.junit.subdir}/${ext.junit.rep.file}"/>
            <pathelement location="${ext.xerces2-j.subdir}/xml-apis.jar"/>
            <pathelement location="${ext.xerces2-j.subdir}/xercesImpl.jar"/>
            <pathelement location="${module.classes.dir}"/>
            <pathelement location="${module.autosrc.dir}"/>
            <pathelement location="${module.test.classes.dir}"/>
            <path refid="stage.classpath"/>
        </path>

	<target name="localinit" description="Module specific initialization tasks">
      <wsdl2java url="${stage.int.dir}/WMProxy.wsdl"
         output="${module.autosrc.dir}"
         deployscope="application"
         serverSide="no"
         skeletonDeploy="false"
         noimports="no"
         verbose="no"
         typeMappingVersion="1.1"
         testcase="no"/>

      <!--copy file="${module.autosrc.dir}/org/glite/wms/wmproxy/deploy.wsdd" tofile="${module.config.dir}/wms-wmproxy-service-deploy.wsdd" /-->
      <!--copy file="${module.autosrc.dir}/org/glite/wms/wmproxy/undeploy.wsdd" tofile="${module.config.dir}/wms-wmproxy-service-undeploy.wsdd" /-->

	</target>
	
	<target name="localcompile"
		description="Module specific compile tasks">
	</target>


        <!-- ========================================================
              Generate DOC : genrate DOCs
             ======================================================== -->

        <target name="doc"
                depends="unitcoverage"
                description="Build Javadoc">
            <mkdir dir="${module.autodoc.dir}/html"/>
            <javadoc packagenames="org.glite.wms.wmproxy"
                     classpathref="compile.classpath"
                     sourcepath="${module.src.dir}:${module.int.dir}"
                     destdir="${module.autodoc.dir}/html"
                     author="true"
                     version="true"
                     use="true"
                     access="public"/>
        </target>


	<target name="localclean"
		description="Module specific cleaning tasks">
                <delete failonerror="false">
                        <fileset dir="${module.config.dir}" includes="**/*.wsdd"/>
                </delete>
	</target>

        <target name="stage" depends="makejars"
                description="Stage the libraries to the central repositories.">
                <echo>Staging binaries to stage area...</echo>
                <copy toDir="${stage.java.dir}">
                        <fileset dir="${module.lib.dir}">
                                <include name="*.jar" />
                                <exclude name="*-test.jar" />
                        </fileset>
                </copy>

                <copy todir="${stage.conf.dir}">
                        <fileset dir="${module.config.dir}">
                                <include name="*.wsdd" />
                        </fileset>
                </copy>

                <echo>Done!</echo>
        </target>

</project>		
