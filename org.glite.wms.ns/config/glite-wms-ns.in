#!/bin/bash
#
# edg-wl-ns:      Starts the NetworkServer daemon
#
# Version:        @(#) /etc/rc.d/init.d/edg-ns-daemon   2.0
#
# chkconfig:   345 95 06 
#
# description: Starts, stops and checks the European DataGrid \
#              NetworkServer daemon.
#
# processname: edg-ns-daemon
# config: /opt/edg/etc/edg_wl.conf
# hide: false

# Source function library
. /etc/rc.d/init.d/functions

GLITE_LOCATION=${GLITE_LOCATION:-@prefix@}

. ${GLITE_LOCATION}/etc/glite-wms-vars.sh
. "${GLITE_LOCATION}/libexec/glite-wms-services-certs.sh"

. ${GLITE_LOCATION}/etc/profile.d/glite-wms.sh
. ${GLITE_LOCATION}/etc/profile.d/glite-wms-config.sh

GLITE_WMS_CONFIG_DIR=${GLITE_LOCATION}/etc/
export GLITE_WMS_CONFIG_DIR

init_variables()
{
 # All these things must go in some centralized place...
 GLITE_WMS_BIN_DIR=${GLITE_LOCATION}/bin
 X509_USER_PROXY=${GLITE_WMS_TMP}/networkserver/ns.proxy

 # All these things should stay there
 CONFIGURATION_FILE=glite_wms.conf
 NSBASE=glite-wms-manager_ns_daemon
 NETWORKSERVER=${GLITE_WMS_BIN_DIR}/${NSBASE}

 GLITEUSER_HOME=`eval echo ~${GLITE_WMS_USER}`
 [ -d ${GLITEUSER_HOME} ] || do_failure "Missing user directory ${GLITEUSER_HOME}"
 X509_PROXY_PATH=${GLITE_WMS_TMP}/networkserver

 if [ ! -d $X509_PROXY_PATH ] ; then
   mkdir -p "$X509_PROXY_PATH" || do_failure "Cannot create proxy file path"
   chown "${GLITE_WMS_USER}" "$X509_PROXY_PATH"
 fi

 export X509_USER_PROXY

 if [ -z "$GLITE_WMS_GROUP" ]; then
    export GLITE_WMS_GROUP=$GLITE_WMS_USER
 fi

 chgrp ${GLITE_WMS_GROUP} ${GRIDMAPDIR}
 chmod g+w ${GRIDMAPDIR}
} 

create_dirs()
{
  CONFIGURATION_FILE=glite_wms.conf
 
#  . ${GLITE_LOCATION}/libexec/glite-wms-parse-configuration.sh ${CONFIGURATION_FILE} NetworkServer
}

do_failure()
{
  echo -n " $*"
  failure "$*"
  echo ""

  exit 1
}

create_proxy()
{
    proxy=`"${GLOBUS_LOCATION}/bin/grid-proxy-init" -q \
          -cert $GLITE_HOST_CERT \
          -key  $GLITE_HOST_KEY \
          -hours 24 \
          -out  "${X509_USER_PROXY}.$$" 2>&1`

    [ $? -eq 0 ] || do_failure $proxy

    move=`chmod 400 "${X509_USER_PROXY}.$$" &&
            chown "${GLITE_WMS_USER}" "${X509_USER_PROXY}.$$" &&
            mv "${X509_USER_PROXY}.$$" "${X509_USER_PROXY}" 2>&1`
    [ $? -eq 0 ] || do_failure "$move"
}

start()
{
  su ${GLITE_WMS_USER} -c "${NETWORKSERVER} -c ${CONFIGURATION_FILE}" >/dev/null 2>&1 &
  [ "$?" -eq 0 ] && success $"${NETWORKSERVER} startup" || failure $"${NETWORKSERVER} startup" 
    
  echo ""

  echo `pidofproc ${NETWORKSERVER}` > /var/run/${NSBASE}.pid
}

stop()
{
  killproc ${NETWORKSERVER}
  echo ""
}

status()
{
  local pid=

  pid=`pidofproc ${NETWORKSERVER}`

  if [ -n "$pid" ]; then
    echo "NetworkServer running in pid: ${pid}"
  elif [ -f /var/run/${NSBASE}.pid ]; then
    echo "Networkserver not running but stale pid file present."
    exit 1
  else
    echo "NetworkServer not running"
    exit 2
  fi
}

check()
{
  status=`${NETWORKSERVER} 2>&1`

  if [ $? -eq 0 ]; then
    success $"check"
    echo ""
  else
    failure $"check"
    echo ""
    echo $status
  fi
}

cd /tmp

case $1 in
    start)
	echo -n "Starting NetworkServer..."

	init_variables
        create_dirs
	create_proxy
	start
	RETVAL=$?
    ;;
    stop)
	echo -n "Stopping NetworkServer..."

	init_variables
	stop
	RETVAL=$?
    ;;
    restart)
	echo -n "Stopping NetworkServer..."

	init_variables
        create_dirs
	stop

	echo -n "Starting NetworkServer..."
	create_proxy
	start
	RETVAL=$?
    ;;
    status)
	init_variables
	status
	RETVAL=$?
    ;;
    proxy)
	#echo -n "Creating proxy..."

	init_variables
	create_proxy

	#success $"proxy"
	#echo ""
	RETVAL=$?
    ;;
    check)
        echo -n "Checking installation..."

	init_variables
	check
	RETVAL=$?
    ;;
    *)
	echo "Usage: $0 {start|stop|restart|proxy|status|check}"
	RETVAL=1
    ;;
esac
exit $RETVAL
