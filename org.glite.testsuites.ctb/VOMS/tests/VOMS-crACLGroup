#!/bin/bash
# Date: 01/12/2006                                                                          #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: Test ACL  create entry  command (add--acl-entry) for group       #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #                                    
#       - VO host name                                                                      #
#       - groupname                                                                         #
#       - fake user certificate file path                                                   #
# Requisites:                                                                               #
#	- VOMS server                                                                       #
#       - 1 configured VO which is empty                                                    #
#                                                                                           #
#                                                                                           #                                                               
#############################################################################################
#                                                                                           #
#                                                                                           #
#############################################################################################
export voms_host=$1
echo "<pre>"
source $SAME_SENSOR_HOME/tests/config_file

rm -rf $voms_tmp
rm -rf $voms_stderr
rm -rf $tempo

date
echo "<br>"
echo "Test VOMS-crACLGroup:"
echo "<br>"
echo "VO=$vo_name"
echo "<br>"
echo "group=$GROUP"
echo "<br>"
echo "fake user=$USER"
echo "<br>"

ACE_RIGHTS=( CONTAINER_READ MEMBERSHIP_READ ACL_READ REQUESTS_READ ATTRIBUTES_READ CONTAINER_WRITE MEMBERSHIP_WRITE ACL_WRITE REQUESTS_WRITE ATTRIBUTES_WRITE ACL_DEFAULT ALL )

USER_SUBJECT=$(openssl x509 -in $USER -noout -subject | sed -e 's/^subject=[ ]*//')
USER_ISSUER=$(openssl x509 -in $USER -noout -issuer | sed -e 's/^issuer=[ ]*//')

echo "<br>SCENARIO: empty VO"
echo "<br>"
voms-admin --vo=$vo_name --host $voms_host add-ACL-entry "/"$vo_name"/"$GROUP $USER ALL FALSE > $voms_stderr
grep "org.glite.security.voms.admin.database.NoSuchGroupException" $voms_stderr > /dev/null

if [ $? == 1 ]; then
    echo "Setting ACE on non-existing group did not generate an error."
    echo "<br>"
    cat $voms_stderr
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "SCENARIO: Create group <$GROUP> and try to set each right"
echo "<br>"
voms-admin --vo=$vo_name --host $voms_host create-group "/"$vo_name"/"$GROUP

for ind in 0 1 2 3 4 5 6 7 8 9 10 11
do
 OP=${ACE_RIGHTS[ind]}

 echo "<br>Create ACL entry with right $OP for user $USER_SUBJECT and context /$vo_name/$GROUP"
 voms-admin --vo=$vo_name --host $voms_host add-ACL-entry "/"$vo_name"/"$GROUP $USER $OP FALSE

 echo -n "<br>Check whether the right is properly set..."
 voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP > $voms_tmp

 SET_PERM_LIST=$(grep "^($USER_SUBJECT,$USER_ISSUER): " $voms_tmp | sed -e "s/^([^\)]*): //")
 if [ "$SET_PERM_LIST" != "$OP" ]; then
    voms-admin --vo=$vo_name --host delete-group "/"$vo_name"/"$GROUP
    echo "FAILED"
    echo "<br>Error in creating an ACE with right $OP"
    echo "<br>Test has failed"
    echo "<br>"
    exit $SAME_ERROR
 fi
 echo "OK"
done

echo "<br>SCENARIO: Check ACE with multiple rights set"
echo "<br>"

for ind in 1 2 3 4 5 6 7 8 9 10
do
 IFS=,
 OP="${ACE_RIGHTS[*]:0:$ind}"

 echo "<br>Create ACL entry with rights $OP for user $USER_SUBJECT and context /$vo_name/$GROUP"
 voms-admin --vo=$vo_name --host $voms_host add-ACL-entry "/"$vo_name"/"$GROUP $USER "$OP" FALSE

 echo -n "<br>Check whether the rights are properly set..."
 voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP > $voms_tmp

 SET_PERM_LIST="$(grep "^($USER_SUBJECT,$USER_ISSUER): " $voms_tmp | sed -e "s/^([^\)]*): //")"

 for CURRENT_PERM in $SET_PERM_LIST; do
    j=0
    FOUND="no"

    while [ $j -lt $ind ]; do
       if [ "${ACE_RIGHTS[$j]}" = "$CURRENT_PERM" ]; then
          FOUND="yes"
          break
       fi
       j=$[$j+1]
    done

    if [ "$FOUND" = "no" ]; then
       voms-admin --vo=$vo_name --host delete-group "/"$vo_name"/"$GROUP
       echo "FAILED"
       echo "<br>Permission $CURRENT_PERM should not be set but it is."
       echo "<br>Error in add-ACL-entry or get-ACL when using multiple permissions."
       echo "<br>Test has failed."
       echo "<br>"
       exit $SAME_ERROR
    fi

  j=0
  while [ $j -lt $ind ]; do

     FOUND="no"
     for CURRENT_PERM in $SET_PERM_LIST; do
        if [ "${ACE_RIGHTS[$j]}" = "$CURRENT_PERM" ]; then
           FOUND="yes"
           break
        fi
     done

     if [ "$FOUND" = "no" ]; then
        voms-admin --vo=$vo_name --host delete-group "/"$vo_name"/"$GROUP
        echo "FAILED"
        echo "<br>Permission ${ACE_RIGHTS[$j]} should be set but it is not."
        echo "<br>Error in add-ACL-entry or get-ACL when using multiple permissions."
        echo "<br>Test has failed."
        echo "<br>"
        exit $SAME_ERROR
     fi
  
     j=$[$j+1]
  done
 done

 echo "OK"
done

echo "<BR>SCENARIO: Try to create an ACL entry for an unknown operation"
echo "<br>"

voms-admin --vo=$vo_name --host $voms_host add-ACL-entry "/"$vo_name"/"$GROUP $USER "lllist" FALSE 2> $voms_stderr
grep "ValueError: lllist is not a supported VOMSPermission" $voms_stderr > /dev/null

if [ $? == 1 ]; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    echo "Incorrect error message"
    echo "<br>"
    cat $voms_stderr
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "Cleaning tasks"
echo "<br>"

voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
rm -rf $voms_tmp
rm -rf $voms_stderr
rm -rf $tempo

echo "Test OK"
echo "</pre>"
exit $SAME_OK
