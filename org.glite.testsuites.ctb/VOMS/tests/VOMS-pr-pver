#!/bin/bash
# Date: 05/04/2007                                                                          #
# Revised: March 2008                                                                       #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: check option 'proxyver' for voms-proxy-init                      #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #
#       - VO host name                                                                      #
#       - User certificate                                                                  #
# Requisites:                                                                               #
#       - VOMS server                                                                       #
#       - 1 configured VO                                                                   #
#       - user certificate                                                                  #
#       - user key                                                                          #
#       - vomses:  VOMS description                                                         # 
#                                                                                           #
#############################################################################################
#                                                                                           #
# Note on security issues: the host and user certificates used by this test are dummy ones  #
# provided by the test utils package.                                                       #
#                                                                                           #
#############################################################################################
echo "<pre>"
export voms_host=$1
source $SAME_SENSOR_HOME/tests/pr_config_file

USER_SUBJECT=$(openssl x509 -in $USERCERT -noout -subject | sed -e 's/^subject=[ ]*//')
USER_ISSUER=$(openssl x509 -in $USERCERT -noout -issuer | sed -e 's/^issuer=[ ]*//')

OPTION="proxyver"
rm -rf $voms_tmp

echo
date
echo "VOMS-PROXY-INIT: check option - $OPTION"


echo "Create new user and proxy"
voms-admin --vo=$vo_name --host $voms_host create-user $USER
echo "List users:"
voms-admin --vo=$vo_name --host $voms_host list-users

echo "Extract by openssl from usercert.pem"
user_subject=`openssl x509 -in $USER -noout -subject | cut -d" " -f2-5`
echo "DN=$user_subject"

echo
echo "1.1. voms-proxy-init, ver=2"
voms-proxy-destroy
voms-proxy-init -voms $vo_name -vomses $VOMSES -cert $USERCERT -key $USERKEY -$OPTION 2 -pwstdin < $PWS

if [ $? = 0 ]; then
   echo "OK"
else 
   echo "Test is failed, exit code=1 "
   voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
   exit $SAME_ERROR
fi

echo "1.2. Check proxy info"

voms-proxy-info -all > $voms_tmp
cat $voms_tmp

echo "1.3. Check user DN"
grep "$user_subject" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi

echo "1.4. Use grid-proxy-info for check type of proxy" 

grid-proxy-info >$voms_tmp
cat $voms_tmp

patt="type     : full legacy globus proxy"
grep "$pat" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi
echo "Test proxyver=2 - OK"


echo
echo "2.1. voms-proxy-init, proxyver=3"
voms-proxy-destroy
voms-proxy-init -voms $vo_name -vomses $VOMSES -cert $USERCERT -key $USERKEY -$OPTION 3 -pwstdin < $PWS


if [ $? = 0 ]; then
   echo "OK"
else 
   echo "Test is failed, exit code=1"
   voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
   exit $SAME_ERROR
fi

echo "2.2. Check proxy info"

voms-proxy-info -all > $voms_tmp
cat $voms_tmp

echo "2.3. Check user DN"
grep "$user_subject" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi

echo "2.4. Use grid-proxy-info for check type of proxy" 

grid-proxy-info >$voms_tmp
cat $voms_tmp

patt="type     : Proxy draft compliant impersonation proxy"
grep "$pat" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi
echo "Test proxyver=3 - OK"

echo
echo "3.1. voms-proxy-init, proxyver=4"

voms-admin --vo=$vo_name --host $voms_host list-users
voms-proxy-destroy
voms-proxy-init -voms $vo_name -vomses $VOMSES -cert $USERCERT -key $USERKEY -$OPTION 4 -pwstdin < $PWS

if [ $? = 0 ]; then
   echo "OK"
else 
   echo "Test is failed, exit code=1"
   voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
   exit $SAME_ERROR
fi

echo "2.2. Check proxy info"

voms-proxy-info -all > $voms_tmp
cat $voms_tmp

echo "2.3. Check user DN"
grep "$user_subject" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi

echo "2.4. Use grid-proxy-info for check type of proxy" 

grid-proxy-info >$voms_tmp
cat $voms_tmp

patt="type     : end entity credential"
grep "$pat" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    exit $SAME_ERROR
fi


echo "Test is OK"
voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
echo "</pre>"
exit $SAME_OK


