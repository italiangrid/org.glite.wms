#!/bin/bash
# Date: 21/03/2007                                                                          #
# Revised: March 2008                                                                       #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: check option 'list' for voms-proxy-init                          #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #
#       - VO host name                                                                      #
#       - User certificate                                                                  #
# Requisites:                                                                               #
#       - VOMS server                                                                       #
#       - 1 configured VO                                                                   #
#       - user certificate                                                                  #
#       - user key                                                                          #
#       - vomses:  VOMS description                                                         # 
#                                                                                           #
#############################################################################################
#                                                                                           #
# Note on security issues: the host and user certificates used by this test are dummy ones  #
# provided by the test utils package.                                                       #
#                                                                                           #
#############################################################################################
echo "<pre>"
export voms_host=$1
source $SAME_SENSOR_HOME/tests/pr_config_file
export OPTION="list"
rm -rf $voms_tmp
group="test-group"
groupi="/$vo_name/$group"
role="User-group-role"

USER_SUBJECT=$(openssl x509 -in $USERCERT -noout -subject | sed -e 's/^subject=[ ]*//')
USER_ISSUER=$(openssl x509 -in $USERCERT -noout -issuer | sed -e 's/^issuer=[ ]*//')

function clearTask {
    echo "Delete user, group"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    echo "Delete role=$role"
    voms-admin --vo=$vo_name --host $voms_host delete-role $role
        
    groupi="/$vo_name/$group"
    echo "Delete group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host delete-group $groupi
}

echo
date
echo "VOMS-PROXY-INIT: check option - $OPTION"

echo "1. Create new user"
voms-admin --vo=$vo_name --host $voms_host create-user $USER

echo "1.2. Create group"

echo "Create group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host create-group "$groupi"
    
    echo "1.3. Add user to group as group member"
    
    echo "Add member to group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host --nousercert add-member $groupi "$USER_SUBJECT" "$USER_ISSUER"
        
    echo "1.3.1. List user groups:"
    voms-admin --vo=$vo_name --host $voms_host --nousercert list-user-groups "$USER_SUBJECT" "$USER_ISSUER"
    echo "Create role $role"
    voms-admin --vo=$vo_name --host $voms_host create-role $role
    echo "Assign user role in group"
    voms-admin --vo=$vo_name --host $voms_host --nousercert assign-role $groupi $role "$USER_SUBJECT" "$USER_ISSUER"
    
echo "Create proxy"
voms-proxy-init -voms $vo_name  -$OPTION -vomses $VOMSES -cert $USERCERT -key $USERKEY -pwstdin < $PWS 1> $voms_tmp

if [ $? = 0 ]; then
   echo "OK"
else 
   echo "Test is failed, exit code=1"
   clearTASK
   exit $SAME_ERROR
fi

patt1="/$vo_name/Role=NULL/Capability=NULL"
patt2="$groupi/Role=$role/Capability=NULL"
patt3="$groupi/Role=NULL/Capability=NULL"

echo "Patterns:"
echo $patt1
echo $patt2
echo $patt3

echo "Check patterns:"
grep "$patt1" $voms_tmp > /dev/null

if [ $? = 1 ]; then
   echo "Test is failed"
   clearTask
   exit $SAME_ERROR
fi
echo "OK"


grep "$patt2" $voms_tmp > /dev/null
if [ $? = 1 ]; then
   echo "Test is failed"
   clearTask
   exit $SAME_ERROR
fi
echo "OK"

grep "$patt3" $voms_tmp > /dev/null
if [ $? = 1 ]; then
   echo "Test is failed"
   clearTask
   exit $SAME_ERROR
fi
    echo "Test is OK"
    clearTask
echo "</pre>"
exit $SAME_OK

