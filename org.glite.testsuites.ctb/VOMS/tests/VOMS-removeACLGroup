#!/bin/bash
# Date: 01/12/2006                                                                          #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: Remove ACL entry of group                                        #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #                                    
#       - VO host name                                                                      #
#       - groupname                                                                         #
#       - fake user certificate file path                                                   #
# Requisites:                                                                               #
#	- VOMS server                                                                       #
#       - 1 configured VO which is empty                                                    #
#                                                                                           #
#                                                                                           #                                                               
#############################################################################################
#                                                                                           #
#                                                                                           #
#############################################################################################
echo "<pre>"
export voms_host=$1
source $SAME_SENSOR_HOME/tests/config_file

rm -rf $voms_tmp
rm -rf $voms_stderr
rm -rf $tempo

date
echo "<br>"
echo "Test VOMS-removeACLGroup:"
echo "<br>"
echo "VO=$vo_name"
echo "<br>"
echo "group=$GROUP"
echo "<br>"
echo "fake user=$USER"
echo "<br>"

USER1_SUBJECT=$(openssl x509 -in $USER1 -noout -subject | sed -e 's/^subject=[ ]*//')
USER1_ISSUER=$(openssl x509 -in $USER1 -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER2_SUBJECT=$(openssl x509 -in $USER2 -noout -subject | sed -e 's/^subject=[ ]*//')
USER2_ISSUER=$(openssl x509 -in $USER2 -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER3_SUBJECT=$(openssl x509 -in $USER3 -noout -subject | sed -e 's/^subject=[ ]*//')
USER3_ISSUER=$(openssl x509 -in $USER3 -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER4_SUBJECT=$(openssl x509 -in $USER4 -noout -subject | sed -e 's/^subject=[ ]*//')
USER4_ISSUER=$(openssl x509 -in $USER4 -noout -issuer | sed -e 's/^issuer=[ ]*//')

echo "SCENARIO: Try to remove an ACL entry for a non-existent group (empty VO)"
echo "<br>"

echo voms-admin --vo=$vo_name --host $voms_host remove-ACL-entry "/"$vo_name"/"$GROUP $USER FALSE

voms-admin --vo=$vo_name --host $voms_host remove-ACL-entry "/"$vo_name"/"$GROUP $USER FALSE > $voms_stderr
grep "org.glite.security.voms.admin.database.NoSuchGroupException" $voms_stderr > /dev/null

if [ $? == 1 ]; then
    echo "Unexpected behavior when trying to remove an ACL entry for a non-existent group."
    echo "<br>"
    cat $voms_stderr
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "SCENARIO: Create a group hierarchy /$vo_name/$GROUP/$GROUP, ACL entries and test the removal without propagation"
echo "<br>"

voms-admin --vo=$vo_name --host $voms_host create-group "/"$vo_name"/"$GROUP
voms-admin --vo=$vo_name --host $voms_host create-group "/"$vo_name"/"$GROUP/$GROUP

voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP "$USER1_SUBJECT" "$USER1_ISSUER" "CONTAINER_READ,CONTAINER_WRITE" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP/$GROUP "$USER1_SUBJECT" "$USER1_ISSUER" "ACL_READ,ACL_WRITE" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER" "MEMBERSHIP_READ,MEMBERSHIP_WRITE" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP/$GROUP "$USER3_SUBJECT" "$USER3_ISSUER" "MEMBERSHIP_READ,MEMBERSHIP_WRITE" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert remove-ACL-entry "/"$vo_name"/"$GROUP "$USER1_SUBJECT" "$USER1_ISSUER" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert remove-ACL-entry "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER" FALSE

echo "<BR>Checking ACL for /$vo_name/$GROUP"
voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP > $voms_tmp

if grep -q "^($USER1_SUBJECT,$USER1_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Error removing an ACL entry for ($USER1_SUBJECT;/$vo_name/$GROUP)"
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

if grep -q "^($USER3_SUBJECT,$USER3_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Error removing an ACL entry for ($USER3_SUBJECT;/$vo_name/$GROUP)"
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "<BR>Checking ACL for /$vo_name/$GROUP/$GROUP"
voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP/$GROUP > $voms_tmp

if ! grep -q "^($USER1_SUBJECT,$USER1_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Propagation error. ACL entry for ($USER1_SUBJECT;/$vo_name/$GROUP/$GROUP) is missing but should not."
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

if ! grep -q "^($USER3_SUBJECT,$USER3_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo echo "Propagation error. ACL entry for ($USER3_SUBJECT;/$vo_name/$GROUP/$GROUP) is missing but should not."
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "SCENARIO: Test the removal of ACL entries with propagation enabled."
echo "<br>"

# Prepare the scenario (restore the ACL entries removed by the previous test for group /$vo_name/$GROUP"
voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP "$USER1_SUBJECT" "$USER1_ISSUER" "CONTAINER_READ,CONTAINER_WRITE" FALSE
voms-admin --vo=$vo_name --host $voms_host --nousercert add-ACL-entry "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER" "MEMBERSHIP_READ,MEMBERSHIP_WRITE" FALSE

# Do removal with propagation enabled
voms-admin --vo=$vo_name --host $voms_host --nousercert remove-ACL-entry "/"$vo_name"/"$GROUP "$USER1_SUBJECT" "$USER1_ISSUER" TRUE
voms-admin --vo=$vo_name --host $voms_host --nousercert remove-ACL-entry "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER" TRUE

echo "<BR>Checking ACL for /$vo_name/$GROUP"
voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP > $voms_tmp

if grep -q "^($USER1_SUBJECT,$USER1_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Error removing an ACL entry for ($USER1_SUBJECT;/$vo_name/$GROUP) with propagation enabled"
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

if grep -q "^($USER3_SUBJECT,$USER3_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Error removing an ACL entry for ($USER3_SUBJECT;/$vo_name/$GROUP) with propagation enabled"
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "<BR>Checking ACL for /$vo_name/$GROUP/$GROUP"
voms-admin --vo=$vo_name --host $voms_host get-ACL "/"$vo_name"/"$GROUP/$GROUP > $voms_tmp

if grep -q "^($USER1_SUBJECT,$USER1_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo "Propagation error. ACL entry for ($USER1_SUBJECT;/$vo_name/$GROUP/$GROUP) exists but should not."
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

if grep -q "^($USER3_SUBJECT,$USER3_ISSUER): " $voms_tmp; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
    echo echo "Propagation error. ACL entry for ($USER3_SUBJECT;/$vo_name/$GROUP/$GROUP) exists but should not."
    echo "<br>"
    cat $voms_tmp
    echo "<br>"
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "Cleaning tasks."
echo "<br>"

voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP/$GROUP
voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP

rm -rf $voms_tmp
rm -rf $voms_stderr
rm -rf $tempo

echo "Test OK"
echo "</pre>"
exit $SAME_OK

