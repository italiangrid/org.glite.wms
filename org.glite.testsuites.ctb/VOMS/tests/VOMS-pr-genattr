#!/bin/bash
# Date: 18/04/2007                                                                          #
# Revised: March 2008                                                                       #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: check "generic attributes' for voms-proxy-init                   #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #
#       - VO host name                                                                      #
#       - User certificate                                                                  #
# Requisites:                                                                               #
#       - VOMS server                                                                       #
#       - 1 configured VO                                                                   #
#       - user certificate                                                                  #
#       - user key                                                                          #
#       - vomses:  VOMS description                                                         # 
#                                                                                           #
#############################################################################################
#                                                                                           #
# Note on security issues: the host and user certificates used by this test are dummy ones  #
# provided by the test utils package.                                                       #
#                                                                                           #
#############################################################################################
group=""

function clearTask {
    echo "Delete user, group"
    voms-admin --vo=$vo_name --host $voms_host --nousercert delete-user "$USER_SUBJECT" "$USER_ISSUER"
    groupi="/$vo_name/$group"
    echo "Delete group attribute"
    voms-admin --vo=$vo_name --host $voms_host  delete-attribute-class "$ATTRIBUTE"
    voms-admin --vo=$vo_name --host $voms_host  delete-group-attribute $groupi "$ATTRIBUTE"
    echo "Delete group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host delete-group $groupi

}
echo "<pre>"
export voms_host=$1
source $SAME_SENSOR_HOME/tests/pr_config_file

rm -rf $voms_tmp

USER_SUBJECT=$(openssl x509 -in $USERCERT -noout -subject | sed -e 's/^subject=[ ]*//')
USER_ISSUER=$(openssl x509 -in $USERCERT -noout -issuer | sed -e 's/^issuer=[ ]*//')

echo
date
echo "VOMS-PROXY-INIT: check option: voms-proxy-init generic attributes"
echo "VO: $vo_name"
echo "VOMS: $VOMSES"
echo "cert: $USERCERT"
echo "key: $USERKEY"
echo "PWS: $PWS"

echo "1. Create new user"
voms-admin --vo=$vo_name --host $voms_host create-user $USER
#voms-proxy-init -voms $vo_name -vomses $VOMSES -cert $USERCERT -key $USERKEY -pwstdin < $PWS

echo "List users:"
voms-admin --vo=$vo_name --host $voms_host list-users
group="test-attribute-group"
groupi="/$vo_name/$group"
echo "Create group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host create-group "$groupi"

echo "1.3. Add user to group as group member"

groupi="/$vo_name/$group"
echo "Add member to group: $groupi"
    voms-admin --vo=$vo_name --host $voms_host --nousercert add-member $groupi "$USER_SUBJECT" "$USER_ISSUER"

echo "1.3.1. List user groups:"
voms-admin --vo=$vo_name --host $voms_host --nousercert list-user-groups "$USER_SUBJECT" "$USER_ISSUER"

echo "1.4. Set Attribute for new created group"

ATTRIBUTE="TEST_ATTRIBUTE"
ATTVALUE="VALUE of the attribute '$ATTRIBUTE'"
ATTDESC="DESCRIPTION  of the attribute '$ATTRIBUTE'"
voms-admin --vo=$vo_name --host $voms_host create-attribute-class "$ATTRIBUTE" "$ATTDESC" FALSE
voms-admin --vo=$vo_name --host $voms_host set-group-attribute "$groupi" "$ATTRIBUTE" "$ATTVALUE"


echo "2. Destroy, Create and check proxy"
voms-proxy-destroy
echo "Create proxy"
voms-proxy-init -voms $vo_name -vomses $VOMSES -cert $USERCERT -key $USERKEY -pwstdin < $PWS
#echo "2.1. Check exit code"
if [ $? = 0 ]; then
   echo "Exit code  is OK"
else
    echo "Test is failed, exit code=1"
    clearTask        
    exit $SAME_ERROR
fi
               
echo "2.2.Extract by openssl from usercert.pem"
user_subject=`openssl x509 -in $USER -noout -subject | cut -d" " -f2-5`
echo "DN=$user_subject"

echo "2.3. Check user DN"
voms-proxy-info -all > $voms_tmp

cat $voms_tmp
grep "$user_subject" $voms_tmp

if [ $? == 1 ]; then
    echo "Test has failed"
    clearTask
    exit $SAME_ERROR
fi


echo "Check result voms-proxy-ibfo -all"
voms-proxy-info -all > $voms_tmp
cat $voms_tmp

PATT1="attribute : /$vo_name/Role=NULL/Capability=NULL"
PATT2="attribute : $groupi/Role=NULL/Capability=NULL"
PATT3="attribute : $ATTRIBUTE = $ATTVALUE ($groupi)"
echo "Expected attributes:"
echo $PATT1
echo $PATT2
echo $PATT3 

grep "$PATT1" $voms_tmp
if [ $? == 1 ]; then
	echo "Test has failed"
	clearTask
	exit $SAME_ERROR
fi
echo "OK"

grep "$PATT2" $voms_tmp
if [ $? == 1 ]; then
	echo "Test has failed"
	clearTask
	exit $SAME_ERROR
fi
echo "OK"

grep "$PATT3" $voms_tmp
if [ $? == 1 ]; then
	echo "Test has failed"
	clearTask
	exit $SAME_ERROR
fi


echo "Test is OK"
echo "Clear task"
clearTask

echo "</pre>"
exit $SAME_OK                  
