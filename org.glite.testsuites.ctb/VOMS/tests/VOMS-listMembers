#!/bin/bash
# Date: 09/11/2006                                                                          #
# Revised: March 2008                                                                       #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: List members of group                                            #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #                                    
#       - VO host name                                                                      #
#       - User certificate file path                                                        #
# Requisites:                                                                               #
#	- VOMS server                                                                       #
#       - 1 configured VO which is empty                                                    #
#       - user certificate                                                                  #
#                                                                                           #                                                               
#############################################################################################
#                                                                                           #
#                                                                                           #
#############################################################################################
echo "<pre>"
export voms_host=$1
source $SAME_SENSOR_HOME/tests/config_file

rm -rf $voms_tmp
rm -rf $voms_stderr

date
echo "<br>"
echo "test VOMS-listMembers:"
echo "<br>"
echo "VO=$vo_name"
echo "<br>"
echo "Group=$GROUP"
echo "<br>"
echo "User=$USER_subject"
echo "<br>"

USER_SUBJECT=$(openssl x509 -in $USER -noout -subject | sed -e 's/^subject=[ ]*//')
USER_ISSUER=$(openssl x509 -in $USER -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER2_SUBJECT=$(openssl x509 -in $USER2 -noout -subject | sed -e 's/^subject=[ ]*//')
USER2_ISSUER=$(openssl x509 -in $USER2 -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER3_SUBJECT=$(openssl x509 -in $USER3 -noout -subject | sed -e 's/^subject=[ ]*//')
USER3_ISSUER=$(openssl x509 -in $USER3 -noout -issuer | sed -e 's/^issuer=[ ]*//')

USER4_SUBJECT=$(openssl x509 -in $USER4 -noout -subject | sed -e 's/^subject=[ ]*//')
USER4_ISSUER=$(openssl x509 -in $USER4 -noout -issuer | sed -e 's/^issuer=[ ]*//')

echo "SCENARIO: VO empty"
echo "<br>"
echo "List non existing members of non existing group"
echo "<br>"
voms-admin --vo=$vo_name --host $voms_host list-members "/"$vo_name"/"$GROUP > $voms_stderr
grep "org.glite.security.voms.admin.database.NoSuchGroupException: Group " $voms_stderr > /dev/null

if [ $? == 1 ]; then
    echo "Incorrect error message:"
    echo "<br>"
    cat $voms_stderr
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "SCENARIO: Create new group"
echo "<br>"
voms-admin --vo=$vo_name  --host $voms_host  create-group "/"$vo_name"/"$GROUP
echo "List non existing members of group $GROUP"
echo "<br>"
voms-admin --vo=$vo_name --host $voms_host list-members "/"$vo_name"/"$GROUP > $voms_stderr
grep "org.glite.security.voms.service.NotInDatabase: Not in database: group" $voms_stderr
grep "No members found in group" $voms_stderr > /dev/null

if [ $? == 1 ]; then
    voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
    echo "Incorrect error message:"
    echo "<br>"
    cat $voms_stderr
    echo "Test has failed"
    echo "<br>"
    exit $SAME_ERROR
fi

echo "SCENARIO: Create users"
echo "<br>"
voms-admin --vo=$vo_name --host $voms_host create-user $USER
voms-admin --vo=$vo_name --host $voms_host create-user $USER2
voms-admin --vo=$vo_name --host $voms_host create-user $USER3
voms-admin --vo=$vo_name --host $voms_host create-user $USER4
echo "Add members to group $GROUP"
echo "<br>"
voms-admin --vo=$vo_name  --host $voms_host add-member "/"$vo_name"/"$GROUP "$USER_SUBJECT" "$USER_ISSUER"
voms-admin --vo=$vo_name  --host $voms_host add-member "/"$vo_name"/"$GROUP "$USER2_SUBJECT" "$USER2_ISSUER"
voms-admin --vo=$vo_name  --host $voms_host add-member "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER"
voms-admin --vo=$vo_name  --host $voms_host add-member "/"$vo_name"/"$GROUP "$USER4_SUBJECT" "$USER4_ISSUER"
echo "List members of group $GROUP"
echo "<br>"
voms-admin --vo=$vo_name  --host $voms_host list-members "/"$vo_name"/"$GROUP > $voms_tmp

grep "$USER_SUBJECT" $voms_tmp > /dev/null

if [ $? == 1 ]; then
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER_SUBJECT" "$USER_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER2_SUBJECT" "$USER2_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER3_SUBJECT" "$USER3_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER4_SUBJECT" "$USER4_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
   echo "Error creating user $user1"
   echo "<br>"
   cat $voms_tmp
   echo "Test has failed"
   echo "<br>"
   exit $SAME_ERROR
fi

grep "$USER2_SUBJECT" $voms_tmp > /dev/null

if [ $? == 1 ]; then
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER_SUBJECT" "$USER_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER2_SUBJECT" "$USER2_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER3_SUBJECT" "$USER3_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER4_SUBJECT" "$USER4_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
   echo "Error creating user $user2"
   echo "<br>"
   cat $voms_tmp
   echo "Test has failed"
   echo "<br>"
   exit $SAME_ERROR
fi

grep "$USER3_SUBJECT" $voms_tmp > /dev/null

if [ $? == 1 ]; then
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER_SUBJECT" "$USER_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER2_SUBJECT" "$USER2_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER3_SUBJECT" "$USER3_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER4_SUBJECT" "$USER4_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
   echo "Error creating user $user3"
   echo "<br>"
   cat $voms_tmp
   echo "Test has failed"
   echo "<br>"
   exit $SAME_ERROR
fi

grep "$USER4_SUBJECT" $voms_tmp > /dev/null

if [ $? == 1 ]; then
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER_SUBJECT" "$USER_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER2_SUBJECT" "$USER2_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER3_SUBJECT" "$USER3_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-user "$USER4_SUBJECT" "$USER4_ISSUER"
   voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP
   echo "Error creating user $user4"
   echo "<br>"
   cat $voms_tmp
   echo "Test has failed"
   echo "<br>"
   exit $SAME_ERROR
fi


echo "Cleaning tasks"
echo "<br>"

voms-admin --vo=$vo_name --host $voms_host remove-member "/"$vo_name"/"$GROUP "$USER_SUBJECT" "$USER_ISSUER"
voms-admin --vo=$vo_name --host $voms_host remove-member "/"$vo_name"/"$GROUP "$USER2_SUBJECT" "$USER2_ISSUER"
voms-admin --vo=$vo_name --host $voms_host remove-member "/"$vo_name"/"$GROUP "$USER3_SUBJECT" "$USER3_ISSUER"
voms-admin --vo=$vo_name --host $voms_host remove-member "/"$vo_name"/"$GROUP "$USER4_SUBJECT" "$USER4_ISSUER"

voms-admin --vo=$vo_name --host $voms_host delete-group "/"$vo_name"/"$GROUP

voms-admin --vo=$vo_name --host $voms_host delete-user "$USER_SUBJECT" "$USER_ISSUER"
voms-admin --vo=$vo_name --host $voms_host delete-user "$USER2_SUBJECT" "$USER2_ISSUER"
voms-admin --vo=$vo_name --host $voms_host delete-user "$USER3_SUBJECT" "$USER3_ISSUER"
voms-admin --vo=$vo_name --host $voms_host delete-user "$USER4_SUBJECT" "$USER4_ISSUER"

rm -rf $voms_tmp
rm -rf $voms_stderr

echo "Test OK"
echo "</pre>"
exit $SAME_OK
