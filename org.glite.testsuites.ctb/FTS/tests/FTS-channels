#!/bin/bash

##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHORS: Gianni Pucciani, CERN
#
##############################################################################

#source functions definitions
source FTS-common

###################################
# Script for testing FTS channels #
########################################################
# 							                            #	
# Returned values:					                    #
#                 Exit  0: Test Passed			        #
#		          Exit  1: Test Failed			        #
#                 Exit  2: Wrong Input  		        #
#########################################################

showUsage()
{
 echo "                                                                                                     "
 echo "Usage: FTS-channels --fts <fts hostname>  "
 echo "Options: "
 echo "          --fts  <fts hostname> "
 echo "                   The name of the FTS host."
}

if [ $# -ne 2 ];then
  showUsage
  echo
  echo "-TEST FAILED-"
  exit 2
fi

until [ -z "$1" ] 
do
  case "$1" in
     --fts)
           if [ -z "$2" ]; then
                shift 1
           else
                FTS_HOST=$2
                shift 2
           fi
     ;;
          *)
           showUsage
           exit 2
    ;;
  esac
done

#1)Get Channels list
echo "Retrieving channels list..."
get_channels

if [ $? == 0 ]; then 
  echo "Channels retrieved:"
  echo $Channel_List
else
  echo "Error in get_channels()"
  echo "-TEST FAILED-"
  exit 1
fi

#2)Check that all the channels are active
echo "Checking that all the channels are active..."
for Channel in $Channel_List
do
  echo "testing channel $Channel"
  is_channel_active $Channel
  if [ $? = 0 ];then
    echo "Channel $Channel is Active"
  else
    echo "Channel $Channel is not Active"
    echo "-TEST FAILED-"
    exit 1
  fi
done

echo "-TEST PASSED-"

exit 0
