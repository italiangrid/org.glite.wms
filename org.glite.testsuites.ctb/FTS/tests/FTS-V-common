#!/bin/bash

##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHOR: Victor Galaktionov, CERN
#
##############################################################################


##################################################################
#
#                       CHANNEL OPERATIONS
#
###################################################################
export JOBLIST_NUMBER=3
export NEW_CHANNEL=CERN-SINP
function is-channel-exists()
{
    echo "is-channel-exists($1)"
    CHANNEL=$1

    #Get Channels list
    echo
    echo "Retrieving channels list..."
    get_channels
    echo "List=$Channel_List"
    if [ "x$Channel_List" == "x" ]; then
	echo "No channels retrieved"
	return 1
    fi
    
    for Channel in $Channel_List
    do
        if [ "$Channel" == "$CHANNEL" ];then
            echo "Channel exists"
            return 0
	fi
    done
    return 1
}                


#
# Special tests for glite-transfer-channel-list operation
# Check command return code only 
#
# Added by Victor Galaktionov 24/11/2009
function special-check-channel-list()
{
    echo  "special_check_channel-list($1)"
    CHANNEL=$1
    
    echo "1. Check with noncorrect service"
    echo "glite-transfer-channel-list -s https://FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement"
    glite-transfer-channel-list -s https://FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement 2> message
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-list  command - failed"
	cat message
	return 1
    fi 
    echo "OK"
     
    echo "2. Check -h  parameter" 
    echo "glite-transfer-channel-list -h"
    glite-transfer-channel-list -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-lost command - failed"
	return 1
    fi 
    echo "OK" 
     
    echo "3. Check -v  parameter" 
    echo "glite-transfer-channel-list -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL"
    glite-transfer-channel-list -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list command - failed"
	return 1
    fi 
    echo "OK"    
     
    echo "4. Check -V  parameter" 
    echo "glite-transfer-channel-list -V"
    glite-transfer-channel-list -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "5. Check -q  parameter" 
    echo "glite-transfer-channel-list -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL"
    glite-transfer-channel-list -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "5.1. Check without -s  parameter" 
    echo "glite-transfer-channel-list -q"
    glite-transfer-channel-list -q
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-list command - failed"
	return 1
    fi 
    echo "OK"
    
    echo "6. Check --verbose  parameter" 
    echo "glite-transfer-channel-list --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHAWNNEL"
    glite-transfer-channel-list --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL > message
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list command - failed"
	return 1
    fi 
    grep "$CHANNEL" message > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list --verbose command - failed"
	return 1
    fi 

    echo "7. Check -x  parameter" 
    echo "glite-transfer-channel-list -x  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL"
    glite-transfer-channel-list -x  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL > message
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list -x command - failed"
	return 1
    fi 
    grep "Srm copy" message > /dev/null 
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-list -x command - failed"
	return 1
    fi 
    
    echo "9.  Check nonexisting channel  parameter" 
    echo "glite-transfer-channel-list -x  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement CHANNEL"
    glite-transfer-channel-list -x  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement CHANNEL 2>&1 > message
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-list -x command - failed"
	return 1
    fi
    echo "OK" 
    
    return 0
}
    

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function special-check-channel-audit()
{
    echo "special-check-channel-audit($1)"
    local CHANNEL=$1 
 
    echo "1. glite-transfer-channel-audit  -h"
    glite-transfer-channel-audit  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-audit -h - failure"
	return 1
    fi

    echo "2. glite-transfer-channel-audit  -q"
    glite-transfer-channel-audit -q
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-audit -q - failure"
	return 1
    fi

    echo "3. glite-transfer-channel-audit  -V"
    glite-transfer-channel-audit  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-audit -V - failure"
	return 1
    fi
    return 0
}


# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-audit()
{
    echo "channel-audit($1)"
    echo "glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1"
    glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1
    if [ $? != 0 ]; then
	echo "Audit channel command - failed"
	return 1
    fi

    echo "glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement -r state $1"
    glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement -r state $1
    if [ $? != 0 ]; then
	echo "Audit channel command - failed"
	return 1
    fi

    echo "glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement -m 10 -$1"
    glite-transfer-channel-audit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement -m 10 $1
    if [ $? != 0 ]; then
	echo "Audit channel command - failed"
	return 1
    fi

    return 0
}


# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function special-check-channel-drop()
{
    echo "special-check-channel-drop($1)"
 
    local CHANNEL=$1 
 
    echo "1. glite-transfer-channel-drop  -h"
    glite-transfer-channel-drop  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-drop -h - failure"
	return 1
    fi
    echo "2. glite-transfer-channel-drop  -q"
    glite-transfer-channel-drop  -q
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-drop -q - failure"
	return 1
     fi
    echo "3. glite-transfer-channel-drop  -V"
    glite-transfer-channel-drop  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-drop -V - failure"
	return 1
    fi
    return 0
}


# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-drop()
{
    echo "channel-drop($1)"
    glite-transfer-channel-drop  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 2> message
    if [ $? != 0 ]; then
	echo "Drop channel command - failed"
	cat message
	return 1
    fi
    return 0
}


# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function simple-channel-add()
{
    
    echo "simple-channel-add($1, $2, $3)"
    if [ -z $1 ]; then
     echo "Channel name must be given to channel-add()"
     return 1
    fi
    
    local CHANNEL=$1
    local SITE_S=$2
    local SITE_D=$3
      
    echo "Add channel: $CHANNEL $SITE_S $SITE_D"
    glite-transfer-channel-add  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	 $CHANNEL $SITE_S $SITE_D
    if [ $? != 0 ]; then
	glite-transfer-channel-list  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement
	echo "Add channel - failed"
	return 1
    fi
    return 0
}

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-addmanager()
{
    echo "channel-addmanager($1, $2)"
    echo "Add manager for nonexisting channel"
    echo "glite-transfer-channel-addmanager --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement BLA-BLA $2"
    glite-transfer-channel-addmanager --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement "BLA-BLA" "$2" 2> message
    if [ $? == 0 ]; then
	echo "Channel-addmanager - failed"
	return 1
    fi 
    grep "does not exist" message
    if [ $? != 0 ]; then
	    echo "Channel-addmanager - failed"
	    return 1
    fi
     
    echo "Add manager for existing channel"
    echo "glite-transfer-channel-addmanager -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2"
    glite-transfer-channel-addmanager -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 "$2"
    if [ $? != 0 ]; then
	echo "Channel-addmanager - failed"
	return 1
    fi
    
    echo "Again add the same manager"
    echo "glite-transfer-channel-addmanager -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2"
    glite-transfer-channel-addmanager -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 "$2" #2> message
    if [ $? == 0 ]; then
	echo "Channel-addmanager - failed"
	cat message
	return 1
    fi
    cat message
    echo "OK"
    
    echo "Check special parameters"
    echo "glite-transfer-channel-addmanager -h"
    glite-transfer-channel-addmanager -h > /dev/null

    if [ $? != 0 ]; then
	echo "Channel-addmanager - failed"
	return 1
    fi 
     
    echo "glite-transfer-channel-addmanager -V"
    glite-transfer-channel-addmanager -V
    if [ $? != 0 ]; then
	echo "Channel-addmanager - failed"
	return 1
    fi

    echo "glite-transfer-channel-addmanager -q"
    glite-transfer-channel-addmanager -q
    if [ $? == 0 ]; then
	echo "Channel-addmanager - failed"
	return 1
    fi
    return 0
}


# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-listmanagers()
{
    echo "channel-listmanagers($1, $2)"
    echo "List managers"
    echo "glite-transfer-channel-listmanagers -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1"
    glite-transfer-channel-listmanagers -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 > message
    if [ $? != 0 ]; then
	echo "Channel-listmanagers - failed"
	return 1
    fi
    cat message
  
    echo "Check special parameters"
    echo "glite-transfer-channel-listmanagers -h"
    glite-transfer-channel-listmanagers -h > /dev/null
    if [ $? != 0 ]; then
	echo "Channel-listmanagers - failed"
	return 1
    fi 
     
    echo "glite-transfer-channel-listmanagers -V"
    glite-transfer-channel-listmanagers -V
    if [ $? != 0 ]; then
	echo "Channel-listmanagers - failed"
	return 1
    fi

    echo "glite-transfer-channel-listmanagers -q"
    glite-transfer-channel-listmanagers -q
    if [ $? == 0 ]; then
	echo "Channel-listmanagers - failed"
	return 1
    fi
    return 0

}

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-removemanager()
{
    echo "channel-removemanager($1, $2)"
    echo "Remove nonexisting manager"
    echo "glite-transfer-channel-removemanager -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 'bla-bla-bla'"
    glite-transfer-channel-removemanager -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 "bla-bla-bla" 2> message
    if [ $? == 0 ]; then
	echo "Channel-removemanager - failed"
	return 1
    fi
    #cat message
    grep "No such principal on channel" message
    if [ $? != 0 ]; then
	echo "Channel-removemanager - failed"
	return 1
    fi
    echo "OK"
    
    echo "2. Remove real manager"
    echo "glite-transfer-channel-removemanager -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 '$2'"
    glite-transfer-channel-removemanager -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 "$2" 2> message
    if [ $? != 0 ]; then
	echo "Channel-removemanager - failed"
	cat message
	return 1
    fi
    echo "OK"
    
    echo "Check removed manager"
    echo "glite-transfer-channel-listmanagers -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1"
    glite-transfer-channel-listmanagers -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 > message 
    if [ $? != 0 ]; then
	echo "Channel-listmanagers - failed"
	return 1
    fi
    grep "$2" message
    if [ $? == 0 ]; then
	echo "Manager not removed"
	cat message
	return 1
    fi
     
    echo "Check special parameters"
    echo "glite-transfer-channel-removemanager -h"
    glite-transfer-channel-removemanager -h > /dev/null
    if [ $? != 0 ]; then
	echo "Channel-removemanager - failed"
	return 1
    fi 
     
    echo "glite-transfer-channel-removemanager -V"
    glite-transfer-channel-removemanager -V
    if [ $? != 0 ]; then
	echo "Channel-removemanager - failed"
	return 1
    fi

    echo "glite-transfer-channel-listmanager -q"
    glite-transfer-channel-removemanager -q
    if [ $? == 0 ]; then
	echo "Channel-removemanager - failed"
	return 1
    fi
    return 0
}

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function special-channel-set()
{
   echo "special-check-channel-set($1)"
    CHAMNEL=$1
    echo "1. glite-transfer-channel-set  -h"
    glite-transfer-channel-set  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set -h - failure"
	return 1
    fi
    echo "2. glite-transfer-channel-set  -q"
    glite-transfer-channel-set  -q
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-set -q - failure"
	return 1
     fi
    echo "3. glite-transfer-channel-set  -V"
    glite-transfer-channel-set  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set -V - failure"
	return 1
    fi
    
    echo "4. Set additional channel param"
    echo "-k Y -x 100 --block-size 500 --http-timeout 200 --tx-log-level DEBUG"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	    -k Y -x 100 --block-size 500 --http-timeout 200 --tx-log-level DEBUG $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    
    echo "--preparing-ratio 10 --urlcopy-put-to 100 --urlcopy-putdone-to 15"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	    --preparing-ratio 10 --urlcopy-put-to 100 --urlcopy-putdone-to 150 $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    
    echo "--urlcopy-get-to 200 --urlcopy-getdone-to 300 --urlcopy-tx-to 350 --urlcopy-tx-marks-to 399 -urlcopy-no-prog-to 400 "	 
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	--urlcopy-get-to 200 --urlcopy-getdone-to 300 --urlcopy-tx-to 350 --urlcopy-tx-marks-to 399 --urlcopy-no-prog-to 400 $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi

    echo "--urlcopy-tx-to-per-mb 50 --srmcopy-direction PUSH --srmcopy-to 200 --srmcopy-refresh-to 15"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	--urlcopy-tx-to-per-mb 50 --srmcopy-direction PUSH --srmcopy-to 200 --srmcopy-refresh-to 150 $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    echo "-k N -x unset --block-size unset --http-timeout unset --tx-log-level WARN"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	    -k N -x unset --block-size unset --http-timeout unset --tx-log-level WARN $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    
    echo "--preparing-ratio 200  --urlcopy-put-to unset --urlcopy-putdone-to unset"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	    --preparing-ratio 200 --urlcopy-put-to unset --urlcopy-putdone-to unset $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    
    echo "--urlcopy-get-to unset --urlcopy-getdone-to unset --urlcopy-tx-to unset --urlcopy-tx-marks-to unset -urlcopy-no-prog-to unset "	 
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	--urlcopy-get-to unset --urlcopy-getdone-to unset --urlcopy-tx-to unset --urlcopy-tx-marks-to unset --urlcopy-no-prog-to unset $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi
    
    echo "--urlcopy-tx-to-per-mb unset --srmcopy-direction PULL --srmcopy-to unset --srmcopy-refresh-to unset"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement \
	--urlcopy-tx-to-per-mb  unset --srmcopy-direction PULL --srmcopy-to unset --srmcopy-refresh-to unset $CHANNEL
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-set - failure"
	return 1
    fi

    return 0
}

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-set()
{
    echo "channel-set($1, $2, $3, $4, $5, $6, $7 $8)"
    if [ -z $1 ]; then
         echo "Channel name must be given to channel-set()"
	 return 1
    fi
    
    local CHANNEL=$1
    local BANDWIDTH=$2
    local CONTACT=$3
    local STATE=$4
    local STREAMS=$5
    local THROUGHPUT=$6
    local FILES=$7
    local MESSAGE=$8
    localNOTAUTH="You are not authorised"
    
    echo "1. Set channel param: --verbose -b $BANDWIDTH -c $CONTACT  -S $STATE -T $STREAMS -f $FILES -t $THROUGHPUT -m '$MESSAGE' $CHANNEL"
    glite-transfer-channel-set  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement --verbose \
	-b $BANDWIDTH -c $CONTACT  -S $STATE -T $STREAMS -f $FILES -t $THROUGHPUT -m "$MESSAGE"  $CHANNEL  2> message
    if [ $? != 0 ]; then
	grep "$NOTAUTH" message
	if [ $? == 0 ]; then
	    cat message
	    echo "NOTE>>: add: You are not authorised for channel management upon this service"
	    return 2
	fi
	return 1
    fi
    echo "OK"
    
    echo "2. Check added parameters"
    glite-transfer-channel-list -x  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL > message
    if [ $? != 0 ]; then
	echo "Failure in checking  glite-transfer-channel-list"
	cat message
	return 1
    fi
    declare -a OPTIONS
    OPTIONS=("$CHANNEL" $BANDWIDTH  $CONTACT $STATE $STREAMS $FILES $THROUGHPUT  "$MESSAGE")

    for item in ${OPTIONS[*]}
    do
	grep $item message > /dev/null
	if [ $? != 0 ]; then
	    echo "Noncorrect set new parameters channel"
	    return 1
	fi
    done
    
    return 0
}


#
# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function special-check-channel-add()
{
    echo "special-check-channel-add($1, $2, $3)"
 
    local CHANNEL=$1 
 
    echo "1. glite-transfer-channel-add  -h"
    glite-transfer-channel-add  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-add -h - failure"
	return 1
    fi
  
 
    echo "2. glite-transfer-channel-add  -V"
    glite-transfer-channel-add  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-add -V - failure"
	return 1
    fi
 
    echo "3. glite-transfer-channel-add -q https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL $SITE_S $SITE_D"
    glite-transfer-channel-add  -q #-s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL $SITE_S $SITE_D
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-add -q - failure"
	return 1
    fi
 
    echo "4. glite-transfer-channel-add -q"
    glite-transfer-channel-add  -q 
    if [ $? == 0 ]; then
        echo "glite-transfer-channel-add -q -  failure"
        return 1
    fi
    return 0
} 

# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-add()
{
    echo "channel-add($1, $2, $3, $4, $5, $6, $7, $8, $9)"
    if [ -z $1 ]; then
         echo "Channel name must be given to channel-add()"
	 return 1
    fi
    
    local CHANNEL=$1
    local BANDWIDTH=$2
    local CONTACT=$3
    local STATE=$4
    local STREAMS=$5
    local FILES=$6
    local THROUGHPUT=$7
    local SITE_S=$8
    local SITE_D=$9
    localNOTAUTH="You are not authorised"
    
    echo "1. Add channel: --verbose -b $BANDWIDTH -c $CONTACT  -S $STATE -T $STREAMS -f $FILES -t $THROUGHPUT $CHANNEL $SITE_S $SITE_D"
    glite-transfer-channel-add  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement --verbose \
	-b $BANDWIDTH -c $CONTACT  -S $STATE -T $STREAMS -f $FILES -t $THROUGHPUT $CHANNEL $SITE_S $SITE_D  2> message
    if [ $? != 0 ]; then
	grep "$NOTAUTH" message
	if [ $? == 0 ]; then
	    cat message
	    echo "NOTE>>: add: You are not authorised for channel management upon this service"
	    return 2
	fi
	return 1
    fi
    echo "OK"
    
    echo "2. Check added channel"
    glite-transfer-channel-list  -x -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL > message
    if [ $? != 0 ]; then
	echo "Failure in checking  glite-transfer-channel-list"
	cat message
	return 1
    fi
    declare -a OPTIONS
    OPTIONS=("$CHANNEL" $BANDWIDTH  $CONTACT $STATE $STREAMS $FILES $THROUGHPUT)
        
    for item in ${OPTIONS[*]}
    do
        grep $item message > /dev/null
        if [ $? != 0 ]; then
    	    echo "Noncorrect add channel"
    	    return 1
        fi
    done                        
    echo "OK"
    
    echo "3. Check channel adding for existing channel"
    glite-transfer-channel-add  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $CHANNEL  $SITE_S $SITE_D 2> message
    if [ $? == 0 ]; then
	echo "Failure in adding new channel"
	return 1
    fi
    grep "already exists" message
    if [ $? != 0 ]; then
	echo "Failure in checking  glite-transfer-channel-list"
	cat message
	return 1
    fi
    echo "OK"
    return 0 
}

#######################################################################
#
#                      SERVICES administration
#
######################################################################

# Added by Victor Galaktionov 08/12/2009
function service-info()
{
    echo "service-info()"
    echo "1. Get simple service-info"
    echo "glite-transfer-service-info  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer" 
    glite-transfer-service-info  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer >message
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi

 
    echo "2. Check parameters --version --interface-version --schema-version"
    glite-transfer-service-info -s https://vtb-generic-105.cern.ch:8443/glite-data-transfer-fts/services/FileTransfer \
	--version --interface-version --schema-version > message
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi

    grep "Service version" message
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    grep "Interface version" message
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    grep "Schema version" message 
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    
    echo "3. Check parameters --service-metadata"
    glite-transfer-service-info -s https://vtb-generic-105.cern.ch:8443/glite-data-transfer-fts/services/FileTransfer \
	--service-metadata KEY > message
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    grep "unknown" message 
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
        
    echo "4. glite-transfer-service-info -h"
    glite-transfer-service-info -h > /dev/null 
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    echo "5. Check glite-transfer-service-info -V"
    glite-transfer-service-info -V
    if [ $? != 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    
    echo "6. Check without parameters glite-transfer-service-info"
    glite-transfer-service-info
    if [ $? == 0 ]; then
	echo "FTS-service-info - failed"
	return 1
    fi
    return 0
}


# Added by Victor Galaktionov 08/12/2009
function getroles()
{
    echo "getroles($1)"
    echo "1. Get roles without user DN"
    echo "glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer" 
    glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer >message
    if [ $? != 0 ]; then
	echo "FTS-getroles - failed"
	return 1
    fi
    
    grep "Your current clientDN" message > /dev/null
    if [ $? != 0 ]; then
	echo "FTS-getroles - failed"
	return 1
    fi
    
    echo "2. Get roles for real user DN"
    echo "glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1"
    glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u "$1" > message
    if [ $? != 0 ]; then
	echo "FTS-getroles - Failed"
	return 1
    fi
    grep "The user is authorised " message > /dev/null
    if [ $? != 0 ]; then
	echo "FTS-getroles - failed"
	cat message
	return 1
    fi
    
    echo "3. Get roles for nonexisting user DN"
    echo "glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer bla-bla"
    glite-transfer-getroles  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u "bla-bla" > message
    if [ $? != 0 ]; then
	echo "FTS-getroles - failed"
	return 1
    fi
    grep "This user is not authorised" message > /dev/null
    if [ $? != 0 ]; then
	echo "FTS-getroles - failed"
	return 1
    fi
        
    echo "OK, next - special parameters check"
    
    echo "glite-transfer-getroles -h"
    glite-transfer-getroles -h > /dev/null
       if [ $? != 0 ]; then
	echo "FTS-getroles -h  -- failed"
	return 1
    fi
    
    echo "glite-transfer-getroles -V"
    glite-transfer-getroles -V
    if [ $? != 0 ]; then
	echo "FTS-getroles -V  -- failed"
	return 1
    fi

    echo "glite-transfer-getroles -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-getroles -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer > message
    if [ $? != 0 ]; then
	echo "FTS-getroles -q  -- failed"
	return 1
    fi
        
    echo "glite-transfer-getroles -q"
    glite-transfer-getroles -q
    if [ $? == 0 ]; then
	echo "FTS-getroles -q  -- failed"
	return 1
    fi

    return 0
}


#######################################################################
#
#                      VO administration
#
######################################################################


# Added by Victor Galaktionov 04/12/2009
function list-vomanagers()
{
    echo "list-vomanagers($1)"
    glite-transfer-listvomanagers  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1
    if [ $? != 0 ]; then
	echo "listvomanager - failed"
	return 1
    fi
    return 0
}

# Added by Victor Galaktionov 04/12/2009
function add-vomanager()
{
    echo "add-vomanager($1, $2)"
    glite-transfer-addvomanager  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 "$2"
    if [ $? != 0 ]; then
	echo "addvomanager - failed"
	return 1
    fi
    echo "Again add manager"
    glite-transfer-addvomanager  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 "$2"
    if [ $? == 0 ]; then
	echo "addvomanager - failed"
	return 1
    fi
    echo "Check added manager"    
    glite-transfer-listvomanagers  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 > message
    grep "$2" message 
    if [ $? != 0 ]; then
	echo "addvomanager - failed"
	return 1
    fi
     
    return 0
}



# Added by Victor Galaktionov 04/12/2009
function remove-vomanager()
{
    echo "remove-vomanagers($1, $2)"
    echo "Remove nonexisting manager in VO"
    glite-transfer-removevomanager  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 "bla-bla" 2>message
    ret=$?
    #echo "Ret=$ret"
    
    grep "No such principal on VO" message 
    if [ $? != 0 ]; then
	echo "Removevomanager - failed"
	return 1
    fi
    
    if [ $ret == 0 ]; then
	echo "removevomanager - failed"
	return 1
    fi
    
    echo "Remove real manager"
    glite-transfer-removevomanager  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 "$2"
    if [ $? != 0 ]; then
	echo "removevomanager - failed"
	return 1
    fi
    echo "OK"
    glite-transfer-listvomanagers  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1

    return 0
}

function special-check-vomanagers()
{
    echo "1.1. glite-transfer-addvomanager  -h"
    glite-transfer-addvomanager  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-addvomanager -h - failure"
	return 1
    fi
  
    echo "1.2. glite-transfer-addvomanager  -V"
    glite-transfer-addvomanager  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-addvomanager -V - failure"
	return 1
    fi
  
    echo "1.3. glite-transfer-addvomanager  -q"
    glite-transfer-addvomanager  -q
    if [ $? == 0 ]; then
	echo "glite-transfer-addvomanager -q - failure"
	return 1
    fi
  
  
    echo "2.1. glite-transfer-removevomanager  -h"
    glite-transfer-removevomanager  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-removevomanager -h - failure"
	return 1
    fi
  
    echo "2.2. glite-transfer-removevomanager  -V"
    glite-transfer-addvomanager  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-removevomanager -V - failure"
	return 1
    fi
  
    echo "2.3. glite-transfer-removevomanager  -q"
    glite-transfer-removevomanager  -q
    if [ $? == 0 ]; then
	echo "glite-transfer-removevomanager -q - failure"
	return 1
    fi
    
    echo "3.1. glite-transfer-listvomanagers  -h"
    glite-transfer-listvomanagers  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-listvomanagers -h - failure"
	return 1
    fi
  
    echo "3.2. glite-transfer-listvomanagers  -V"
    glite-transfer-addvomanager  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-listvomanagers -V - failure"
	return 1
    fi
  
    echo "3.3. glite-transfer-addvomanager  -q"
    glite-transfer-addvomanager  -q
    if [ $? == 0 ]; then
	echo "glite-transfer-addvomanager -q - failure"
	return 1
    fi
    return 0 
 }



# FTS_HOST must be set.
# Added by Victor Galaktionov 24/11/209
function channel-setvolimit()
{
    echo "channel-setvolimit($1, $2, $3 $4)"
    echo "1. glite-transfer-channel-setvolimit  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2 $3"
    glite-transfer-channel-setvolimit --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2 $3 2> message
    if [ $? == 0 ]; then
	echo "setvolimit channel command - failed, MUST BE diagnose - not shared VO"
	return 1
    fi
    grep "VO does not have a share defined for this channel" message
    if [ $? != 0 ]; then
        echo "Not correct performs glite-transfer-channel-setvolimit"
        cat message
        return 1
    fi
    echo "Temporary skip setvoshare operation"
    echo "OK, define shared VO for this channel $1"
#  
#    echo "2. glite-transfer-channel-setvoshare  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2 $4"
#    glite-transfer-channel-setvoshare  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2 $4
#    if [ $? != 0 ]; then
#        echo "Not correct performs glite-transfer-channel-setvoshare"
#	return 1
#    fi
#
#  echo "Set VO share - OK"
   
#  echo "3. Again glite-transfer-channel-setvolimit  -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement  $1 $2 $3"
#  glite-transfer-channel-setvolimit  -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/ChannelManagement $1 $2 $3
#  if [ $? != 0 ]; then
#    echo "setvolimit channel command - failed"
#    return 1
#  fi
 
    echo "OK, check special parameters"
  
    echo "4. glite-transfer-channel-setvolimit  -h"
    glite-transfer-channel-setvolimit  -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-setvolimit -h - failure"
	return 1
    fi
 
    echo "5. glite-transfer-channel-setvolimit  -V"
    glite-transfer-channel-setvolimit  -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-setvolimit -V - failure"
	return 1
    fi
 
    echo "6. glite-transfer-channel-list -q"
    glite-transfer-channel-list -q 
    if [ $? == 0 ]; then
    	echo "glite-transfer-channel-list -q  - failure"
    	return 1
    fi
 
    return 0
}




###########################################################################
#
#                         TRANSFER JOB OPERATIONS
#
##########################################################################


#
# Special tests for glite-transfer-cancel operation
# Check command return code only 
#
# Added by Victor Galaktionov 18/11/2009
function special_cancel_transfer()
{
    echo "special_cancel_transfer()"
    echo "1. Check -q  parameter" 
    echo "glite-transfer-cancel -q"
    glite-transfer-cancel -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer
    if [ $? != 1 ]; then
	echo "glite-transfer-cancel command - failed"
	return 1
    fi 
    echo "OK" 

    echo "2. Check -h  parameter"
    echo "glite-transfer-cancel -h"
    glite-transfer-cancel -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-cancel command - failed"
	return 1
    fi 
    echo "OK" 

    echo "3. Check -v  parameter" 
    echo "glite-transfer-cancel -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-list -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer
    if [ $? != 0 ]; then
	echo "glite-transfer-cancel command - failed"
	return 1
    fi 
    echo "OK"    
    
    echo "3.1.  Check without -s   parameter" 
    echo "glite-transfer-cancel -v"
    glite-transfer-list -v
    if [ $? == 0 ]; then
	echo "glite-transfer-cancel command - failed"
	return 1
    fi 
    echo "OK"    
     
    echo "4. Check -V  parameter" 
    echo "glite-transfer-cancel -V"
    glite-transfer-cancel -V
    if [ $? != 0 ]; then
	echo "glite-transfer-cancel command - failed"
	return 1
    fi 
 
    echo "OK"     
    return 0
}


#
# Cancel transfer job.
# FTS_HOST must be set.
# The job Id is stored in SUBID
#
# Added by Victor Galaktionov 18/11/209
function transfer_job_cancel()
{
    echo "transfer_job_cancel()"
    
    echo "1. Check without SUBID"
    echo "glite-transfer-cancel -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-cancel -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer 2>message
    if [ $? == 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ">>> NOTE:  glite-transfer-cancel command  failed!"
      return 1
    fi
     
    grep "No request ID specified" message > /dev/null
    if [ $? !=  0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ">>> NOTE:  glite-transfer-cancel command  failed!"
      return 1
    fi
    echo "OK"
    
    echo "2. Check real cancel command" 
    echo "glite-transfer-cancel --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SUBID"
    glite-transfer-cancel --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SUBID 2>message 
 
    if [ $? -gt 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ">>> NOTE:  glite-transfer-cancel command  failed!"
      return 1
    fi
    return 0
}


# Special tests for glite-transfer-status operation
# Check command return code only 
#
# Added by Victor Galaktionov 18/11/2009
function special_check_transfer_status()
{
    echo  "special_check_transfer_status($1)"
    
    echo "1. Check with noncorrect service"
    JID=$1
    echo "glite-transfer-status -s https://FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID"
    glite-transfer-status -s https://FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID 2> message
    if [ $? == 0 ]; then
	echo "glite-transfer-status command - failed"
	cat message
	return 1
    fi 
    echo "OK"
     
    echo "2. Check -h  parameter" 
    echo "glite-transfer-status -h"
    glite-transfer-status -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-status command - failed"
	return 1
    fi 
    echo "OK" 
     
    echo "3. Check -v  parameter" 
    echo "glite-transfer-status -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID"
    glite-transfer-status -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID
    if [ $? != 0 ]; then
	echo "glite-transfer-status command - failed"
	return 1
    fi 
    echo "OK"    
     
    echo "4. Check -V  parameter" 
    echo "glite-transfer-status -V"
    glite-transfer-status -V
    if [ $? != 0 ]; then
	echo "glite-transfer-status command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "5. Check -q  parameter" 
    echo "glite-transfer-status -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID"
    glite-transfer-status -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $JID
    if [ $? != 0 ]; then
	echo "glite-transfer-status command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "6. Check without -s   parameter" 
    echo "glite-transfer-status -q"
    glite-transfer-status -q
    if [ $? == 0 ]; then
	echo "glite-transfer-status command - failed"
	return 1
    fi 
    echo "OK"     
     return 0
}


# Added by Victor Galaktionov 08/12/2009
function special-channel-signal()
{
    echo "special-channel-signal()"
    echo "glite-transfer-channel-signal -h"
    glite-transfer-channel-signal -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority -h command - failed"
	return 1
    fi 
    
    echo "glite-transfer-channel-signal -V"
    glite-transfer-channel-signal -V
    if [ $? != 0 ]; then
	echo "glite-transfer-channel-signal -V command - failed"
	return 1
    fi 
    
    echo "glite-transfer-channel-signal"
    glite-transfer-channel-signal
    if [ $? == 0 ]; then
	echo "glite-transfer-channel-signal command - failed"
	return 1
    fi 
    return 0
    
}



#
# Added by Victor Galaktionov 08/12/2009
function channel-signal()
{
    echo "channel-signal($1, $2)"
    echo "Try extract channel nane"
    #glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 > message
    
    #grep "Channel" message > mess
    #if [ $? != 0 ]; then
#	echo "glite-channel-signal  command - failed"
#	return 1
#    fi 
    count=0
    while [ $count -lt 10 ];
    do
	glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 > message
        grep "Channel" message > mess
	if [ $? != 0 ]; then
	    echo "glite-channel-signal  command - failed"
	    return 1
	fi
	grep "None" mess
	if [ $? != 0 ]; then
	    break
	fi	
	let count=count+1
	sleep 5
    done
    CH=`cat mess | cut -d":" -f2`
    echo "Channel = $CH"
     
    echo "Set signal '$2' to job $1"
    echo "glite-transfer-channel-signal -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer  -j $1 $2"
    glite-transfer-channel-signal -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer  -j $1 $2
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority command - failed"
	return 1
    fi 
        
    echo "OK, check job status glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $"  
    glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 > message
     return 0
    
}


#
# Added by Victor Galaktionov 08/12/2009
function special-set-job-priority()
{
    echo "special-set-job-priority()"
    echo "glite-transfer-setpriority -h"
    glite-transfer-setpriority -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority -h command - failed"
	return 1
    fi 
    
    echo "glite-transfer-setpriority -V"
    glite-transfer-setpriority -V
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority -V command - failed"
	return 1
    fi 
    
    echo "glite-transfer-setpriority"
    glite-transfer-setpriority
    if [ $? == 0 ]; then
	echo "glite-transfer-setpriority command - failed"
	return 1
    fi 
    return 0
    
}


#
# Added by Victor Galaktionov 08/12/2009
function set-job-priority()
{
    echo "set-job-priority($1, $2)"
    echo "Set pririty $2 to job $1"
    glite-transfer-setpriority -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 $2 2>message
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority command - failed"
	return 1
    fi 
    cat message
    
    echo "OK, check job status glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $"  
    glite-transfer-status --verbose  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $1 > message
    grep "Priority" message > mess
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority command - failed"
	return 1
    fi 
    
    grep $2  mess 
    if [ $? != 0 ]; then
	echo "glite-transfer-setpriority command - failed"
	return 1
    fi 
        
    return 0
}

#
# get SE1_SRM_LOC, SE2_SRM_LOC  and submit
# JOBLIST_NUMBER  file transfer. FTS_HOST must be set. The job Id is stored
# in SUBID
#
# Added by Victor Galaktionov 24/11/209
function job-submit()
{
    echo "job-submit($1, $2)"
    if [ -z $1 ];then
        echo "An SE source SRM location must be given to file_transfer()"
        return 2
    else
        local SE1_SRM_LOC=$1
    fi

    if [ -z $2 ];then
        echo "An SE destination SRM location must be given to file_transfer()"
        return 2
    else
        local SE2_SRM_LOC=$2
    fi
    
     
    SUB_FILE_LOC="$HOME/fts-submission-file"
    RESULT_FILE="$HOME/fts-test-results"
    DATE=`date | awk '{print $2"_"$3"_"$4}' | sed -e 's/://g'`
    TMP_FILE="/tmp/FTS_Test_$DATE"
    TEST_FILE_NAME="FTS_Test_$DATE"
    echo "Creating 10MB temporary test file for transfer" 

    echo "" > $TMP_FILE

    dd if=/dev/zero of=$TMP_FILE bs=10MB count=1 2>/dev/null

    echo "Using the 10MB temporary test file: $TMP_FILE" 
    echo "Copy the test file $TMP_FILE on: $SE1_SRM_LOC" 

    GUID=`lcg-cr --vo $VO_NAME -d $SE1_SRM_LOC/$TEST_FILE_NAME file://$TMP_FILE 2>message`

    result=`cat message | wc -l`

    if [ $result -gt 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ">>> NOTE: lcg-cr command for SRM: $SE1_SRM_LOC failed!"
      return 1
    fi
    echo "Removing the 10MB temporary test file: $TMP_FILE"
    rm -rf $TMP_FILE

	echo "Submitting the transfer"  

	echo "glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC" 
	SUBID=`glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC`

	if [ -z "$SUBID" ]; then
    	    echo "Job submition failed!"
    	    return 1
	fi
	echo "Job successfully submited"
	echo "Transfer ID: $SUBID. "

	echo "OK"
 return 0

}     
    
    
#
# get SE1_SRM_LOC, SE2_SRM_LOC  and submit
# JOBLIST_NUMBER  file transfer. FTS_HOST must be set. The job Id is stored
# in SUBID
#
# Added by Victor Galaktionov 24/11/209
function file_transfer_status()
{
    echo "file_transfer_status($1, $2)"
    if [ -z $1 ];then
        echo "An SE source SRM location must be given to file_transfer()"
        return 2
    else
        local SE1_SRM_LOC=$1
    fi

    if [ -z $2 ];then
        echo "An SE destination SRM location must be given to file_transfer()"
        return 2
    else
        local SE2_SRM_LOC=$2
    fi
    
     
    SUB_FILE_LOC="$HOME/fts-submission-file"
    RESULT_FILE="$HOME/fts-test-results"
    DATE=`date | awk '{print $2"_"$3"_"$4}' | sed -e 's/://g'`
    TMP_FILE="/tmp/FTS_Test_$DATE"
    TEST_FILE_NAME="FTS_Test_$DATE"
    echo "Creating 10MB temporary test file for transfer" 

    echo "" > $TMP_FILE

    dd if=/dev/zero of=$TMP_FILE bs=10MB count=1 2>/dev/null

    echo "Using the 10MB temporary test file: $TMP_FILE" 
    echo "Copy the test file $TMP_FILE on: $SE1_SRM_LOC" 

    GUID=`lcg-cr --vo $VO_NAME -d $SE1_SRM_LOC/$TEST_FILE_NAME file://$TMP_FILE 2>message`

    result=`cat message | wc -l`

    if [ $result -gt 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ">>> NOTE: lcg-cr command for SRM: $SE1_SRM_LOC failed!"
      return 1
    fi
    echo "Removing the 10MB temporary test file: $TMP_FILE"
    rm -rf $TMP_FILE

	echo "Submitting the transfer"  

	echo "glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC" 
	SUBID=`glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC`

	if [ -z "$SUBID" ]; then
    	    echo "Job submition failed!"
    	    return 1
	fi
	echo "Job successfully submited"
	echo "Transfer ID: $SUBID. " 
	echo "Check --verbose parameter"
	echo "glite-transfer-status --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SUBID"
	glite-transfer-status --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SUBID > message
    
	if [ $? != 0 ]; then
	    echo "glite-transfer-status --verbose command - failed"
	    return 1
	fi
     
	echo "Check verbose string - 'Client DN'"
	grep "Client DN" message > /dev/null
	if [ $? != 0 ]; then
	    echo "glite-transfer-status --verbose command - noncorrect"
	    return 1
	fi     
	echo "OK"
 return 0

}     


# Special tests for glite-transfer-list operation
# Check command return code only 
#
# Added by Victor Galaktionov 18/11/2009
function special_file_transfer_list()
{
     declare -a states
     #states=(Submitted Canceled Canceling Pending Active Waiting Hold Done Faled)
     states=(Ready Submitted Finished Canceled Canceling Pending Active Hold Done Failed)
     echo "1. simple correct command glite-transfer-list" 
     echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer" 
     glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer
     if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi
    echo "OK"
        
    echo "2. Check with noncorrect service"
    echo "glite-transfer-list -s https://FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-list -s https://FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer 2> message
    if [ $? == 0 ]; then
	echo "glite-transfer-list command - failed"
	cat message
	return 1
    fi 
    echo "OK"
     
    echo "3. Check -h  parameter" 
    echo "glite-transfer-list -h"
    glite-transfer-list -h > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi 
    echo "OK" 
     
    echo "4. Check -v  parameter" 
    echo "glite-transfer-list -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-list -v -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi 
    echo "OK"    
     
    echo "5. Check -V  parameter" 
    echo "glite-transfer-list -V"
    glite-transfer-list -V
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "6. Check -q  parameter" 
    echo "glite-transfer-list -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-list -q  -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "6.1. Check without -s   parameter" 
    echo "glite-transfer-list -q"
    glite-transfer-list -q
    if [ $? == 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi 
    echo "OK"     
    
    echo "7. Check status jobs in list command"
    for ST in ${states[*]}
    do
        echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $ST" 
        glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $ST
        if [ $? != 0 ]; then
	    echo "glite-transfer-list command - failed"
	    return 1
	fi 
    done 
    echo "8. Check noncorrect states"
    echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer blabla" 
    glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer blabla 2>message
    if [ $? == 0 ]; then
	echo "glite-transfer-list command - failed"
	cat message
	return 1
    fi
        
    return 0
}


#
# get SE1_SRM_LOC, SE2_SRM_LOC  and submit
# JOBLIST_NUMBER  file transfer. FTS_HOST must be set. The job Id is stored
# in SUBID
#
# Added by Victor Galaktionov 18/11/209
function file_transfer_list()
{
    echo "file_transfer_list($1, $2, $3)"
    if [ -z $1 ];then
        echo "An SE source SRM location must be given to file_transfer()"
        return 2
    else
        local SE1_SRM_LOC=$1
    fi

    if [ -z $2 ];then
        echo "An SE destination SRM location must be given to file_transfer()"
        return 2
    else
        local SE2_SRM_LOC=$2
    fi
        
    if [ -z $3 ];then
        echo "An CHANNEL must be given to file_transfer()"
        return 2
    else
        local CHANNEL=$3
    fi
    
    SUB_FILE_LOC="$HOME/fts-submission-file"
    RESULT_FILE="$HOME/fts-test-results"

    DATE=`date | awk '{print $2"_"$3"_"$4}' | sed -e 's/://g'`
    TMP_FILE="/tmp/FTS_Test_$DATE"
    TEST_FILE_NAME="FTS_Test_$DATE"
    echo "Creating 10MB temporary test file for transfer" 

    echo "" > $TMP_FILE

    dd if=/dev/zero of=$TMP_FILE bs=10MB count=1 2>/dev/null

    echo "Using the 10MB temporary test file: $TMP_FILE" 
    echo "Copy the test file $TMP_FILE on: $SE1_SRM_LOC" 

    GUID=`lcg-cr --vo $VO_NAME -d $SE1_SRM_LOC/$TEST_FILE_NAME file://$TMP_FILE 2>message`

    result=`cat message | wc -l`

    if [ $result -gt 0 ]; then
        echo ">>> NOTE: `cat message`"
        echo ">>> NOTE: lcg-cr command for SRM: $SE1_SRM_LOC failed!"
        return 1
    fi
    echo "Removing the 10MB temporary test file: $TMP_FILE"
    rm -rf $TMP_FILE

    
    declare -a JOBID
    count=1
    echo ""
    while [ $count -le $JOBLIST_NUMBER ];
    do
	echo ""
	echo "$count. Job submit"
	echo "Creating the submission file in $SUB_FILE_LOC"
	i=0
	echo "" > $SUB_FILE_LOC

	echo "$SE1_SRM_LOC/$TEST_FILE_NAME $SE2_SRM_LOC/$TEST_FILE_NAME$count" >> $SUB_FILE_LOC

	echo "Submitting the transfer"  

	echo "glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC" 
	SUBID=`glite-transfer-submit -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -f $SUB_FILE_LOC`

	if [ -z "$SUBID" ]; then
    	    echo "Job submition failed!"
    	    return 1
	fi
	echo "Job successfully submited"
	echo "Transfer ID: $SUBID. " 
	JOBID[$count]=$SUBID
	JD=${JOBID[$count]}
	echo "Job $JD submitted"
	let count=count+1
    done
    
    echo ""
    USERDN=`glite-voms-proxy-info -identity`
    echo "User DN: $USERDN"    
    
    echo "Check --verbose parameter"
    echo "glite-transfer-list --verbose -s -verbose https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer"
    glite-transfer-list --verbose -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer > message
    if [ $? != 0 ]; then
	echo "glite-transfer-list --verbose command - failed"
	return 1
    fi
     
    echo "Check verbose string - User DN"
    grep "$USERDN" message > /dev/null
    if [ $? != 0 ]; then
	echo "glite-transfer-list --verbose command - noncorrect"
	return 1
    fi     
    echo "OK"
        
    echo "Check parameters -s -c -u -o" 
    echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -c $CHANNEL -u '$USERDN' -o $VO"
    
    echo "Sleep 3 sec"
    sleep 3
    
    glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer  -c "$CHANNEL" -u "$USERDN" -o $VO > jlist
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi
    echo "Result job list:"
    cat jlist
    
    echo ""
    echo "Check every job in this list"
    for JID in ${JOBID[*]}
    do
	echo "Check job $JID"
	grep $JID jlist > /dev/null
	if [ $? == 1 ]; then
	    echo "Submitted job list noncorrect"
	    echo "Job $JID is missing in list"
	    return 1
	fi
	echo "OK"
    done
    
    echo "Special checking"
 
    echo "Check with noncorrect user DN and VO"
    echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u 'USERDN' -o $VO"
    glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u "USERDN" -o $VO > jlist
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi
    #echo "Result:"
    result=`cat jlist | wc -l`
    
     echo "Result:$result"
    if [ $result -gt 0 ]; then
        echo ">>> NOTE: `cat jlist`"
        echo ">>> NOTE: glite-transfer-list -  failed!"
        return 1
    fi
    
    
    echo "glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u "$USERDN" -o 'VO'"
    glite-transfer-list -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer -u "$USERDN" -o "VO" > jlist
    if [ $? != 0 ]; then
	echo "glite-transfer-list command - failed"
	return 1
    fi
    result=`cat jlist | wc -l`
    
    #echo "Result:$result"
    if [ $result -gt 0 ]; then
        echo ">>> NOTE: `cat jlist`"
        echo ">>> NOTE: glite-transfer-list -  failed!"
        return 1
    fi
    
    return 0

}

#  Add by Victor Galaktionov 18/11/2009
#
# Get a Submission Id and check the status of the file transfer.
# Return codes:
#              - 0 status value - valid
#              - 1 error, not defined status value
function if_valid_job_status()
{
    echo "if_valid_job_status()"
    declare -a states
    states=(Ready Submitted Canceled Canceling Pending Active Hold Done Failed Finished )
    if [ -z $1 ];then
        echo "A submission Id must be provided to new_get_status_result()"
        return 2
    fi
    SubId=$1
    
    #echo "glite-transfer-status -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SubId"
    status=`glite-transfer-status -q -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SubId 2>message`

    result=`cat message | wc -l`

    echo "Status=$status"
    if [ $result -gt 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ""
      return
    fi
    for item in ${states[*]}
    do
	if [ $status == $item ]; then
	    return 0
	fi
    done 
    echo "Not define job status $status"
    return 1
}

#  Add by Victor Galaktionov 18/11/2009
#
# Get a Submission Id and check the status of the file transfer.
# Return codes:
#              - 0 trasfer finished
#              - 1 error
#              - 2 bad input arguments
#              - 3 job failed
#              - 4 job is holded
#              - 5 job is in cancelling process
#              - 6 job is canceled 
function new_get_status_result()
{
    echo "new_get_status_result()"
    
    if [ -z $1 ];then
        echo "A submission Id must be provided to new_get_status_result()"
        return 2
    else
      local SubId=$1
    fi

    export GLITE_SD_SITE=$SITE_NAME
    export LCG_CATALOG_TYPE='lfc'

    previous_status="None"

    status=`glite-transfer-status -s https://$FTS_HOST:8443/glite-data-transfer-fts/services/FileTransfer $SubId 2>message`

    result=`cat message | wc -l`

    if [ $result -gt 0 ]; then
      echo ">>> NOTE: `cat message`"
      echo ""
      return
    fi

#    echo "status is $status"
    if test $status == "Finished"
    then
      echo "Job is successfully finished." 
      return 0
    
    elif test $status == "Failed"
    then
      echo "Job is Failed" 
      return 3 

    elif test $status == "Hold"
    then
      echo "Job is Hold"
      return 4

    elif test $status == "Submitted"
    then
      echo "Job is Submitted"
      return 4

    elif test $status == "Ready"
    then
      echo "Job is Ready"
      return 4

    elif test $status == "Pending"
    then
      echo "Job is Pending"
      return 4

    elif test $status == "Done"
    then
      echo "Job is Done"
      return 4

    elif test $status == "Active"
    then
      echo "Job is Active"
      return 4
          
    elif test $status == "Canceling"
    then
      echo "Job is Canceling"
      return 5
    elif test $status == "Canceled"
    then
      echo "Job is Canceled"
      return 6
    else
      echo "Job status unknown: $status"
      return 1
    fi 
}

# Add by Victor Galaktionov 18/11/2009
#
# get SUBID and TIMEOUT and poll the status until it is done (0), failed (3)
# or failed for timeout exceeded (4). 1 ir returned on error and 2 for bad
# input parameters
#
function poll_canceled_status_with_timeout()
{
  if [ -z $1 ];then
	echo "A submission Id must be provided to poll_status_with_timeout()"
	return 2
  else
	local SUBID=$1
  fi

  if [ -z $2 ];then
	echo "A timeout must be provided to poll_status_with_timeout()"
	return 2
  else
	local Timeout=$2
  fi

  echo "Checking status for job ID: $SUBID" 

  previous_status="None"
  t=0
  while test $t -lt $Timeout
  do
	new_get_status_result $SUBID
	status=$?

	if [ "$status" -eq 1 ]; then
    	    echo "error retrieving the status with get_status_result()"
    	    return 1
	fi

	if [ "$status" -eq 6 ]; then
    	    echo "Job done"
    	    return 0
	fi
     
	if [ "$status" -eq 3 ]; then
    	    echo "Job failed"
    	    return 3
	fi
	#if [ "$status" -eq 4 ]; then
        echo "Waiting for status changes" 
        sleep 10
        t=`expr $t + 10`
        echo "Time is $t timeout is $Timeout"  
	#fi

	if [ "$t" -eq "$Timeout" ]; then
    	    echo "Exceded timeout of $Timeout seconds"
    	    return 4
	else
    	    continue
	fi
  done

}