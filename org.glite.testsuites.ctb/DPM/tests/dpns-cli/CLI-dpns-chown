#!/bin/bash
##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHORS: Dimitar Shiyachki <Dimitar.Shiyachki@cern.ch>
#
##############################################################################


export DPNS_HOME="/dpm/$CFG_DPNS_DOMAIN/$CFG_DPNS_BASEDIR/$CFG_VO"
TEST_DIR=d`date +%s%N`
TEST_SUBDIR1=s1`date +%s%N`
TEST_SUBDIR2=s2`date +%s%N`
DUMMY_USERNAME=u`date +%s%N`
DUMMY_GROUPNAME=g`date +%s%N`
TEMP_FILE=/tmp/_dpm_test_temp
TEST_RESULT="SUCCESS"

dpm_exec ()
{
   ssh root@"$DPM_HOST" "$1"
}

FQANlist=$(voms-proxy-info -all | grep "^attribute : /$CFG_VO" | \
           sed -e 's/\/Role=NULL//' | sed -e 's/\/Capability=NULL//' \
           | sed -e 's/attribute : //')

echo
echo "Current user's FQAN list:"
echo "$FQANlist"
echo
echo "Working directory is: $DPNS_HOME"
echo

echo "Creating directory $TEST_DIR/$TEST_SUBDIR1"
dpns-mkdir -p $TEST_DIR/$TEST_SUBDIR1

echo
echo -n "Looking up owning user id: "
ORIGINAL_UID=$(dpns-ls -l $DPNS_HOME/$TEST_DIR | grep $TEST_SUBDIR1 | \
               sed -e 's/[rwxd-]*\s*[0-9]*\s*\([0-9]*\)\s*.*/\1/')
echo $ORIGINAL_UID

echo
echo -n "Getting the subject corresponding to the user id: "
ORIGINAL_USERNAME=$(dpns-listusrmap --uid $ORIGINAL_UID | sed -e 's/\s*[0-9]*\s*//')
echo $ORIGINAL_USERNAME

echo
echo -n "Looking up owning group id: "
ORIGINAL_GID=$(dpns-ls -l $DPNS_HOME/$TEST_DIR | grep $TEST_SUBDIR1 | \
               sed -e 's/[rwxd-]*\s*[0-9]*\s*[0-9]*\s*\([0-9]*\).*/\1/')
echo $ORIGINAL_GID

echo
echo -n "Getting the FQAN corresponding to the group id: "
ORIGINAL_GROUPNAME=$(dpns-listgrpmap --gid $ORIGINAL_GID | sed -e 's/\s*[0-9]*\s*//')
echo $ORIGINAL_GROUPNAME

NEW_GROUPNAME=""
echo
echo -n "Picking a FQAN from the user's proxy FQANs: "
for fqan in $FQANlist; do
   sfqan=$(echo $fqan | sed -e 's/\///')
   if [ "$sfqan" != "$ORIGINAL_GROUPNAME" ]; then
      NEW_GROUPNAME=$(echo $fqan | sed -e 's/\///')
      break
   fi
done
echo $NEW_GROUPNAME

echo
echo -n "Checking whether the FQAN is registered in the DPNS groupmap: "
NEW_GID=$(dpns-listgrpmap --group "$NEW_GROUPNAME" | sed -e 's/\s*\([0-9]*\)\s*.*/\1/')
if [ -z "$NEW_GID" ]; then
   echo "not registered"
   echo "Trying to register remotely on the DPM head node using ssh remote command"
   dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-entergrpmap --group $NEW_GROUPNAME"
   echo -n "Looking up the new GID: "
   NEW_GID=$(dpns-listgrpmap --group "$NEW_GROUPNAME" | sed -e 's/\s*\([0-9]*\)\s*.*/\1/')
fi
echo $NEW_GID

echo
echo "Proceeding with the group owner change of $TEST_DIR/$TEST_SUBDIR1"
dpns-chown :$NEW_GID $TEST_DIR/$TEST_SUBDIR1
if [ $? -ne 0 ]; then
   echo "...error occured"
   dpns-rm -r $TEST_DIR
   echo
   echo "OVERALL RESULT: FAILED"
   exit 1
fi

echo -n "Checking the newly set group owner with dpns-ls"
NEWLYSET_GID=$(dpns-ls -l $TEST_DIR | grep $TEST_SUBDIR1 | \
               sed -e 's/[rwxd-]*\s*[0-9]*\s*[0-9]*\s*\([0-9]*\).*/\1/')
if [ $NEW_GID -ne $NEWLYSET_GID ]; then
   echo "...failed"
   echo "New gid does not match"
   dpns-rm -r $TEST_DIR
   echo
   echo "OVERALL RESULT: FAILED"
   exit 1
else
   echo "...ok"
fi

echo
echo "Registering a dummy user in the DPNS usermap: $DUMMY_USERNAME"
dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-enterusrmap --user $DUMMY_USERNAME"
echo -n "Looking up the UID of the dummy user: "
DUMMY_UID=$(dpns-listusrmap --user "$DUMMY_USERNAME" | sed -e 's/\s*\([0-9]*\)\s*.*/\1/')
echo $DUMMY_UID

echo
echo "Registering a dummy group in the DPNS groupmap: $DUMMY_GROUPNAME"
dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-entergrpmap --group $DUMMY_GROUPNAME"
echo -n "Looking up the GID of the dummy group: "
DUMMY_GID=$(dpns-listgrpmap --group "$DUMMY_GROUPNAME" | sed -e 's/\s*\([0-9]*\)\s*.*/\1/')
echo $DUMMY_GID

echo "Changing user and group ownership..."
dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-chown $DUMMY_UID:$DUMMY_GID \
          \"/dpm/$CFG_DPNS_DOMAIN/$CFG_DPNS_BASEDIR/$CFG_VO/$TEST_DIR/$TEST_SUBDIR1\""
ret=$?

echo "Checking the newly set user owner with dpns-ls..."
NEWLYSET_UID=$(dpns-ls -l $TEST_DIR | grep $TEST_SUBDIR1 | \
               sed -e 's/[rwxd-]*\s*[0-9]*\s*\([0-9]*\)\s*.*/\1/')

echo "Checking the newly set group owner with dpns-ls..."
NEWLYSET_GID=$(dpns-ls -l $TEST_DIR | grep $TEST_SUBDIR1 | \
               sed -e 's/[rwxd-]*\s*[0-9]*\s*[0-9]*\s*\([0-9]*\).*/\1/')

if ( [ $ret -ne 0 ]; ) || ( [ $DUMMY_UID -ne $NEWLYSET_UID ]; ) || \
      ( [ $DUMMY_GID -ne $NEWLYSET_GID ]; ); then 

   if [ $ret -ne 0 ]; then
      echo "dpns-chown failed. Returned value is $ret"
   else
      echo "dpns-chown test has failed. Expected owner uid/gid does not match."
   fi

   dpns-rm -r $TEST_DIR
   dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-rmusrmap --user $DUMMY_USERNAME"
   dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-rmgrpmap --group $DUMMY_GROUPNAME"
fi

dpm_exec "export DPNS_HOST=localhost; /opt/lcg/bin/dpns-chown $ORIGINAL_UID:$ORIGINAL_GID \
          \"/dpm/$CFG_DPNS_DOMAIN/$CFG_DPNS_BASEDIR/$CFG_VO/$TEST_DIR/$TEST_SUBDIR1\""

echo
echo "Trying to change the owner uid without enough privileges..."
dpns-chown $DUMMY_UID:$DUMMY_GID $TEST_DIR/$TEST_SUBDIR1 2>$TEMP_FILE
if ( [ $? -eq 0 ] ) || \
      ( ! grep -q "Operation not permitted" $TEMP_FILE; ); then
   echo "Error. Access allowed."
   dpns-rm -r $TEST_DIR
   dpm_exec "export DPNS_HOST=localhost; \
             /opt/lcg/bin/dpns-rmusrmap --uid $DUMMY_UID --user $DUMMY_USERNAME"
   dpm_exec "export DPNS_HOST=localhost; \
             /opt/lcg/bin/dpns-rmgrpmap --gid $DUMMY_GID --group $DUMMY_GROUPNAME"
   echo
   echo "OVERALL RESULT: FAILED"
   exit 1
else
   echo
   echo "OK: Access denied."
   cat $TEMP_FILE
   echo
fi

dpm_exec "export DPNS_HOST=localhost; \
          /opt/lcg/bin/dpns-rmusrmap --uid $DUMMY_UID --user $DUMMY_USERNAME"
dpm_exec "export DPNS_HOST=localhost; \
          /opt/lcg/bin/dpns-rmgrpmap --gid $DUMMY_GID --group $DUMMY_GROUPNAME"

dpns-rm -r $TEST_DIR
rm -f $TEMP_FILE

echo "OVERALL RESULT: SUCCESS"
exit 0


