
function printMessage 
{
   echo $1
}

function reportComponent
{
   echo $1
}

function reportOutput
{
   echo "->>> $1 stdout was:"
   cat $2
   echo
   echo "->>> $1 stderr was:"
   cat $3
   echo
}

function remote_exec
{
   ssh root@"$1" "export DPM_HOST=$DPM_HOST;export DPNS_HOST=$DPNS_HOST;\
                  export PATH=/opt/lcg/bin:$PATH;$2"
   return $?
}

python_get_firstrep_property="

import sys
import dpm2 as dpm

replicas = dpm.dpns_getreplicax ('FILE_NAME', None, None)
if len(replicas) > 0 :
   print replicas[0].PROPERTY
   sys.exit (0)
else :
   sys.exit (1)
"

function get_firstrep_property 
{
   func=${python_get_firstrep_property//PROPERTY/$2}
   func=${func//FILE_NAME/\/$1}
   python -c "$func"
}

python_make_replica_volatile="

import sys
import dpm2 as dpm

replicas = dpm.dpns_getreplicax ('FILE_NAME', None, None)
if len(replicas) > 0 :
   dpm.dpns_setrtype (replicas[0].sfn, 'V')
   dpm.dpns_setrltime (replicas[0].sfn, LIFETIME)
   sys.exit (0)
else :
   sys.exit (1)
"

function make_replica_volatile
{
   lifetime=$[$(date +%s) + $2]
   func=${python_make_replica_volatile//LIFETIME/$lifetime}
   func=${func//FILE_NAME/\/$1}
   python -c "$func"
}

function dpm2_remote_exec
{
   ssh root@"$1" "export DPM_HOST=$DPM_HOST; export DPNS_HOST=$DPNS_HOST;\
                  dpm2_location=\$(rpm -q -l DPM-interfaces2 | grep \"/dpm2\.py\")
                  if [ -z \$dpm_location ]; then 
                  dpm2_location=\$(rpm -q -l python-dpm | grep \"/dpm2\.py\")
                  fi; export PYTHONPATH=\${dpm2_location%/*}:\$PYTHONPATH; $2"
   return $?
}

python_enable_allfs="

import sys
import dpm2 as dpm

pools = dpm.dpm_getpools ()
for pool in pools :
   filesystems = dpm.dpm_getpoolfs (pool.poolname)
   for filesystem in filesystems :
      if filesystem.status != 0 :
         dpm.dpm_modifyfs (filesystem.server, filesystem.fs, 0)

"



