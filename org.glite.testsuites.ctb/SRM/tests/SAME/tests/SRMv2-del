#!/bin/sh
#****** SRMv2/SRMv2-del
# NAME
# SRMv2-del - Delete given file(s) from SRM.
#
# AUTHOR
#
# SAM Team same-devel[at]cern.ch
#
# LAST UPDATED
#
# 2008-07-18
#
# LANGUAGE
#
# bash
#
# SOURCE

nodeName=$1

. config.sh

VO=$SAME_VO
RETCODE=$SAME_OK
summary=""

do_cleanup() {
    return 0
}

echo_config

check_dep_comm

if [ -s $FILE_ENDPNT ] ; then
    echo "Testing SRMv2 endpoint "
    #port=`cat $FILE_ENDPNT | cut -d : -f3 | cut -d / -f1`
    #srmv2=srm://$nodeName:$port/srm/managerv2
    srmv2=srm://$(cat $FILE_ENDPNT|head -1|sed -e 's|^.*://||')
    echo "<pre>$srmv2</pre>"
else
    no_srmv2_endpoint
fi

echo "<p>"
echo "Using lcg-utils version:"
echo "<p>"
echo "<pre>"
set -x
lcg-del --version
set +x
echo "</pre>"

if [ -s $FILE_SURL ] ; then
    # we may have more than one SAPath
    while read SAPATH SURL ; do
        echo "<p>"
        echo "Testing storage space in path:"
        echo "</p>"
        echo "<pre>"
        echo $SAPATH
        echo "</pre>"
        echo "<p>"
        echo "Testing with SURL:"
        echo "</p>"
        echo "<pre>"
        echo $SURL
        echo "</pre>"
        echo "<i>*** Delete file from storage ***</i>"
        echo "<p>"
        echo "<pre>"
        echo "$(date -u) [$(date +%s)]"        
        set -x
        lcg-del $LCG_UTIL_TIMEOUT -v -b -l -D srmv2 -T srmv2 --vo ${VO} ${SURL}
        retcode=$?
        set +x
        echo "$(date -u) [$(date +%s)]"        
        echo "</pre>"
        if [ $retcode -ne 0 ] ; then
            echo "<p>"
            echo "<font color='#cc0000'><b>ERROR</b></font>: <b>lcg-del</b> failed with exit status: $retcode"
            echo "</p>"
            if [ ${RETCODE} -lt $SAME_ERROR ] ; then
                RETCODE=$SAME_ERROR
            fi
            continue
        else
            echo "<p>"
            echo "<b>OK</b>: File ${SURL} was deleted successfully."
            echo "</p>"
        fi
    done < $FILE_SURL
else
     MSG="Masked by SRMv2-put. No files to be deleted from SRM were provided."
     echo "<pre>"
     echo "<font color='#cc0000'><b>WARNING</b></font>: $MSG"
     echo "</pre>"
     summary=" $MSG"
     RETCODE=$SAME_WARNING
fi

echo "<p>Test status: <b>${RET_CODES[${RETCODE}]}</b></p>"

if [ ! -z "${summary}" ] ; then 
    echo "summary:${summary}"
fi

do_cleanup
exit ${RETCODE}

#****
