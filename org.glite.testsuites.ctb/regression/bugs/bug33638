##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHORS: Di Qing, CERN
#
##############################################################################

test_bug33638_pre () {
 if [ -z "${DEFAULT_SE}" ]; then
  echo "DEFAULT_SE not defined"
  return ${REGTEST_FAIL}
 fi
 if [ -z "${VO}" ]; then
  echo "VO not defined"
  return ${REGTEST_FAIL}
 fi
 return ${REGTEST_OK}
}

test_bug33638_post () {
 rm -f ${LOCAL_FILE}
 unset uni_pid
 unset uni_time
 unset name
 unset LOCAL_FILE
 unset LFN
 unset SURL
 unset GUID
}

test_bug33638 () {

uni_pid=$$
uni_time=`date +%s`
name="$uni_pid$uni_time"

LOCAL_FILE=${TMPDIR-/tmp}/bug33638.$$
LFN="lfn:/grid/${VO}/$name"

echo "$name" >> $LOCAL_FILE

command="lcg-cr --vo ${VO} -l ${LFN} file:${LOCAL_FILE} -d ${DEFAULT_SE}"
message="Running lcg-cr"
run_command "${command}" "${message}"

if [ $? -ne ${REGTEST_OK} ]; then
 return ${REGTEST_FAIL}
fi

GUID=$(echo ${OUTPUT})

command="lcg-lr --vo ${VO} ${LFN}"
message="Running lcg-lr"
run_command "${command}" "${message}"

if [ $? -ne ${REGTEST_OK} ]; then
 lcg-del -a --vo ${VO} ${LFN}
 return ${REGTEST_FAIL}
fi

SURL=$(echo ${OUTPUT})

command="lcg-uf ${GUID} ${SURL}"
message="Running lcg-uf"
run_command "${command}" "${message}"

if [ $? -ne ${REGTEST_OK} ]; then
 lcg-del -a --vo ${VO} ${LFN}
 return ${REGTEST_FAIL}
fi

command="lcg-del --vo ${VO} --nolfc ${SURL}"
message="Running lcg-del"
run_command "${command}" "${message}"

if [ $? -ne ${REGTEST_OK} ]; then
 return ${REGTEST_FAIL}
fi

return $REGTEST_OK

}
