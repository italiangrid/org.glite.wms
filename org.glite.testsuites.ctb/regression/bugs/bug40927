##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHORS: Dimitar Shiyachki <Dimitar.Shiyachki@cern.ch>
#
##############################################################################

test_bug40927_pre () {

   gcc -I/opt/lcg/include/dpm -L/opt/lcg/lib -ldpm -ldl \
       native/bug40927.c -o native/bug40927
   retcode=$?

   if [ $retcode -ne 0 ]; then 
      echo "Native code did not compile successfully. Abort."
      return $REGTEST_FAIL
   fi

   if dpns-ls -l /dpm/cern.ch/home/$VO/bug_40927_file 2> /dev/null | grep -q bug_40927_file; then
      echo "File found before running the test. Removing..."
      lcg-del -l srm://$DPM_HOST/dpm/cern.ch/home/$VO/bug_40927_file
   fi

   VO_virtgid=$(dpns-listgrpmap --group $VO | sed -e 's/\s*\([0-9]*\)\s.*/\1/')
   if [ $? -ne 0 ]; then
      echo "Unable to obtain the virtual group id for VO $VO"
      return $REGTEST_FAIL
   fi

   return $REGTEST_OK
}

test_bug40927_post () {

   if dpns-ls -l /dpm/cern.ch/home/$VO/bug_40927_file 2> /dev/null | grep -q bug_40927_file; then
      lcg-del -l srm://$DPM_HOST/dpm/cern.ch/home/$VO/bug_40927_file
   fi

   if [ -f native/bug40927 ]; then
      rm -f native/bug40927
   fi

   return $REGTEST_OK
}

test_bug40927 () {

   #
   # Check whether the file exists in the namespace after a successfull DPM_ABORT
   # 

#
# Python script that picks a pool (generic or dedicated and accessible to that VO
# and returns its name and original values for GC_START_THRESH and GC_STOP_THRESH
#

python_script="

import dpm
import sys
result, pools = dpm.dpm_getpools()
if result :
   sys.exit(1)
for pool in pools :
   if 0 in pool.gids or $VO_virtgid in pool.gids :
      print pool.poolname + ';' + str(pool.gc_start_thresh) + ';' + str(pool.gc_stop_thresh)
      sys.exit(0)
sys.exit(1)

"

   ./native/bug40927 file:///bin/ls srm://$DPM_HOST/dpm/cern.ch/home/$VO/bug_40927_file 1 V 3600
   if [ $? -eq 0 ]; then
      if dpns-ls -l /dpm/cern.ch/home/$VO/bug_40927_file 2>/dev/null | grep -q bug_40927_file; then
         echo "File exists in namespace. Test failed."
         return $REGTEST_FAIL
      else
         echo "Aborted file is not listed in the namespace."
      fi
   else
      echo "Aborting the DPM_PUT reqeust was not successfull. Test failed."
      return $REGTEST_FAIL
   fi

   #
   # Check whether expired volatile files exists in the namespace after garbage collection
   # 1. Reconfigure a DPM pool for GC_START_THRESH=GC_STOP_THRESH=100
   # 2. PUT a volatile file with lifetime of 60 seconds in that pool
   # 3. Check whether the file exists in the namespace after 70 seconds
   #

   pool_data=$(python -c "$python_script")

   retcode=$?

   echo "RETCODE is $retcode"

   if [ $retcode -eq 1 ]; then
      echo "Error listing pools."
      return $REGTEST_FAIL
   fi

   pool_name=$(echo $pool_data | cut -f 1 -d ';')
   pool_start=$(echo $pool_data | cut -f 2 -d ';')
   pool_stop=$(echo $pool_data | cut -f 3 -d ';')

   echo "Pool selected: $pool_name"

   ssh_command="
      export DPM_HOST=localhost;
      export DPNS_HOST=localhost;
      export PATH=$PATH:/opt/lcg/bin;
      dpm-modifypool --poolname $pool_name --gc_start_thresh 100 --gc_stop_thresh 100"

   ssh -2 -l root $DPM_HOST $ssh_command

   if [ $? -ne 0 ]; then 
      echo "Cannot set GC thresholds for pool $pool_name. Abort."
      return $REGTEST_FAIL
   fi
 
   failure=0

   ./native/bug40927 file:///bin/ls srm://$DPM_HOST/dpm/cern.ch/home/$VO/bug_40927_file 0 V 60
   if [ $? -eq 0 ]; then
      echo "DPM PUT completed successfully. Sleeping for 70 seconds."
      sleep 70

      if dpns-ls -l /dpm/cern.ch/home/$VO/bug_40927_file 2>/dev/null | grep -q bug_40927_file; then
         echo "File exists in the namespace beyond its lifetime. Test has failed"
         failure=1
      else
         echo "Expired volatile file was removed from the namespace at garbage collection time."
         failure=0
      fi

   else
      echo "dpm_put error. Abort."
      failure=1
   fi

   ssh_command="
      export DPM_HOST=localhost;
      export DPNS_HOST=localhost;
      export PATH=$PATH:/opt/lcg/bin;
      dpm-modifypool --poolname $pool_name --gc_start_thresh $pool_start --gc_stop_thresh $pool_stop"

   ssh -2 -l root $DPM_HOST $ssh_command
   if [ $? -ne 0 ]; then
      echo "Warning: Cannot restore GC thresholds for pool $pool_name."
   fi

   if [ $failure -eq 1 ]; then
      return $REGTEST_FAIL
   fi

   return $REGTEST_OK
}
