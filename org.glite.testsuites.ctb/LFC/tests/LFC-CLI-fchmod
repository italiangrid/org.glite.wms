#!/bin/bash
# Date: 09/11/2007                                                                          #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: Change access mode of  LFC files for VO                          #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #
#       - LFC host name                                                                     #
# Requisites:                                                                               #
#	- LFC server                                                                        #
#       - 1 configured VO                                                                   #
#                                                                                           #
#############################################################################################
#                                                                                           #
#                                                                                           #
#############################################################################################
echo "<pre>"
export LFC_HOST=$1
echo $LFC_HOST
access=( --- --x -w- -wx r-- r-x rw- rwx )
GUID=""

function clear (){
   lfc-rm -r -f $1
}
function delGuid () {
    echo "Delete $GUID"
    lcg-del -a $GUID
}
function checkMode () {
    file=$4
    mode=$1$2$3
    QAC="-${access[$1]}${access[$2]}${access[$3]}"
    #echo "checkMode(): file=$file"
    echo -n "   $QAC"    # " $mode"
                
    lfc-chmod $mode $file
                    
    lfc-ls -l $file > $lfc_tmp
    #cat $lfc_tmp
    grep -e $QAC $lfc_tmp > /dev/null
    if [ $? == 1 ]; then
        echo "Test is failed"
        echo "Set mode: $mode"
        echo "Get mode:"
        cat $lfc_tmp
        lfc-chmod 777 $file
        delGuid
        clear $main_dir
        exit $SAME_ERROR
    fi
}
                                                                                                    
source $SAME_SENSOR_HOME/tests/config_file
main_dir="$LFCDIR/test-chfile"

rm -rf $lfc_tmp
rm -rf $lfc_stderr

date
echo "<br>"
echo "Test LFC CLI chmod for files"
echo "<br>"
echo "VO=$vo_name"
echo "SE=$SE"
echo "File=$FILE"
echo "LCG_GFAL_INFOSYS=$LCG_GFAL_INFOSYS" 
echo "<br>"
echo "<br>"

echo "SCENARIO: Directory doesn't exist"
echo "<br>"


echo "<br>"
echo "Strong check if directory nonexists"
echo "List of nonexist directory"
lfc-ls -l $main_dir
clear $main_dir
echo "OK"

echo
echo "1. Change access mode for nonexist directory/file"

lfc-chmod 777 $main_dir 2> $lfc_tmp
grep "No such file or directory" $lfc_tmp > /dev/null
if [ $? == 1 ]; then 
   echo "Noncorrect diagn, exit"
   cat $lfc_tmp
   echo "Test is failed"
   clear $main_dir
   exit $SAME_ERROR
fi
echo "OK"

echo
echo "SCENARIO: check mode for existing  file"
echo "SHORT=$SHORT, MODE=$MODE"

echo "Create main directory: $main_dir"
lfc-mkdir -p $main_dir

LFN="$main_dir/test_file"
echo "SE=$SE, LFN=$LFN"

echo "Create guid and lfn:$LFN"

fguid=`lcg-cr -l $LFN -d $SE --vo $vo_name file:$FILE`
GUID=$fguid
#echo $fguid
echo $fguid > $lfc_tmp

grep "guid:" $lfc_tmp
if [ $? == 1 ]; then 
   echo "Noncorrect create GUID, exit"
   cat $lfc_tmp
   echo "Test is failed"
   clear $main_dir
   exit $SAME_ERROR
fi
echo "OK"

SHORT=0
if [ $SHORT == 1 ]; then
    echo "Short mode 000, 777"
    checkMode 0 0 0 $LFN
    checkMode 7 7 7 $LFN
else
    echo "Long mode: all mode 000-nnn, n<$MODE"
    UMAX=$MODE
    
    owner=0
    while [ $owner -lt $UMAX ]; do              # cycle for owner access
        group=0
        echo
        while [ $group -lt $UMAX ]; do          # cycle for group access
            user=0
            echo
            while [ $user -lt $UMAX ]; do       # cycle for all users
                checkMode $owner $group $user $LFN
                let user=$user+1
            done
            let group=$group+1
        done
        let owner=$owner+1
    done
fi

echo
echo "Cleaning tasks"
echo "<br>"

echo "Check $main_dir:"
lfc-ls $main_dir
echo "Delete GUID and lfn"
delGuid
echo "Again check $main_dir:"
lfc-ls $main_dir

echo "Clear $main_dir"
clear $main_dir

echo "Check $main_dir:"
lfc-ls $main_dir

clear $main_dir
rm -rf $lfc_tmp
rm -rf $lfc_stderr

echo "Test OK"
echo "</pre>"
exit $SAME_OK
