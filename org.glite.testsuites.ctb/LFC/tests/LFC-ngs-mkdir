#!/usr/bin/env python
# test has been developed by Robert Harakaly and changed for SAM (and Nagios) by Victor Galaktionov 
# create a new LFC directory in the name server (lfc_mkdir)
#Do not use explicity values: dteam, etc...

import os,sys,lfc
from testClass import _test 
global lfc_vo

class test_create_dir_ok(_test):
    def info(self):
        return "Directory creation"
    def test(self):
        self.name = lfc_vo + "/python_mkdir_test"   #"/grid/dteam/python_mkdir_test"
        ret = lfc.lfc_mkdir(self.name, 0755)
        return ("",ret)
    def ret(self):
        return ("",0)
    def compare(self,testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal != testRetVal):
            retval = False
        return retval
    def clean(self):
        lfc.lfc_rmdir(self.name)



class test_create_dir_pd(_test):
    def __init__(self):
        self.retVal=-1
    def info(self):
        return "Directory creation (permission denied)"
    def test(self):
        self.name = "/python_mkdir_test"
        ret = lfc.lfc_mkdir(self.name, 0755)
        return ("",ret)
    def ret(self):
        return ("",-1)
    def clean(self):
        lfc.lfc_rmdir(self.name)
    def compare(self,testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal != testRetVal):
            retval = False
        return retval

class lfc_mkdir_test:
    def __init__(self):
        self.name = "lfc_mkdir_test"
        self.tests=[test_create_dir_ok, test_create_dir_pd]
        #self.tests=[test_create_dir_ok]

    def run(self):
        retVal = True
        for testclass in self.tests:
            testInstance = testclass()
            testInstance.prepare()
            ret1 = testInstance.compare(testInstance.test(), (testInstance.ret(), testInstance.getRetVal()))
            testInstance.clean()
            retVal = retVal & ret1
            if ret1:
                print "%-60s[OK]" % testInstance.info()
            else:
                print "%-60s[FAILED]" % testInstance.info()
        return retVal


#************* Interface for SAM and Python tests ***************
print "<pre>"
print "Start test: create a new LFC directory in the name server (lfc_mkdir)"
print "1. Prepare environment"

vo_name=os.environ['VO']
lfc_host = sys.argv[1]
lfc_home = lfc_host + ":/grid/" + vo_name

os.environ['LFC_HOME'] = lfc_home
os.environ['LFC_HOST'] = lfc_host

state_ok   = int(os.environ['STATE_OK'])
state_err  = int(os.environ['STATE_CRITICAL'])
lfc_vo    = "/grid/" + vo_name

print "2. Start test run()"
ret = lfc_mkdir_test().run()


print "3. Ret test code: %s" % ret
print "Exit"
print "</pre>"

if ( ret == True ):
      print "Test is OK"
      sys.exit(state_ok)
else:
      print "Test is failure"
      sys.exit(state_err)