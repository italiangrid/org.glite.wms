#!/bin/bash
# Date: 09/11/2007                                                                          #
# Author: Victor Galaktionov e-mail: victor.galaktionov@cern.ch                             #
# Description of the test: Create LFC subdirectories for VO                                 #
#                                                                                           #
# Input Parameters:                                                                         #
#       - VO name                                                                           #
#       - LFC host name                                                                     #
# Requisites:                                                                               #
#	- LFC server                                                                        #
#       - 1 configured VO                                                                   #
#                                                                                           #
#############################################################################################
#                                                                                           #
#                                                                                           #
#############################################################################################
echo "<pre>"
export LFC_HOST=$1
echo $LFC_HOST

access=( --- --x -w- -wx r-- r-x rw- rwx )

function clear (){
   lfc-rm -r -f $1

}
function checkMode () {
    cdir=$4
    mode=$1$2$3
    QAC="d${access[$1]}${access[$2]}${access[$3]}"
    echo -n "   $QAC"	 # " $mode"
    
    lfc-mkdir -m $mode $cdir
                  
    lfc-ls -l $main_dir > $lfc_tmp
    grep $QAC $lfc_tmp > /dev/null
    if [ $? == 1 ]; then
	echo "Test is failed"
	echo "Set mode: $mode"
	echo "Get mode:"
	cat $lfc_tmp
	lfc-chmod 777 $cdir
	clear $main_dir
	exit $SAME_ERROR
    fi
    lfc-chmod 777 $cdir
    clear $cdir
}
source $SAME_SENSOR_HOME/tests/config_file
main_dir="$LFCDIR/test-mkdir"

rm -rf $lfc_tmp
rm -rf $lfc_stderr

date
echo "<br>"
echo "Test LFC CLI mkdir"
echo "<br>"
echo "VO=$vo_name"
echo "Test main directory: $main_dir"
echo "<br>"
echo "<br>"

echo "SCENARIO: Directory doesn't exist"
echo "<br>"

echo "1. Create main directory: $main_dir"
echo "<br>"

lfc-mkdir -p $main_dir 2> $lfc_stderr
grep "File exists" $lfc_stderr > /dev/null

if [ $? == 0 ]; then 
   echo "Directory exists, exit"
   cat $lfc_stderr
   echo "Test is failed"
   clear $main_dir
   exit $SAME_ERROR
fi


UMAX=$DMAX
echo
echo "2.  Create $UMAX  subdirectories"
echo "<br>"
counter=0
dir=$main_dir
pdir=$main_dir

while [ $counter -lt $UMAX ]; do
  subdir="subdir-$counter"
  dir=$dir/$subdir
  echo "new dir:$dir"
  lfc-mkdir $dir
  lfc-ls $pdir > $lfc_tmp

  grep $subdir $lfc_tmp > /dev/null
  
  if [ $? == 1 ]; then 
    echo "Test is failed"
    clear $main_dir
    exit $SAME_ERROR
  fi
  pdir=$dir
  let counter=counter+1
done
clear $main_dir  
echo "Check all deletion result"
lfc-ls -l $main_dir
 
echo
echo "SCENARIO: Directory  already exists in the VO"
echo "<br>"
echo "Create main directory: $main_dir"
echo "<br>"

lfc-mkdir -p $main_dir
lfc-mkdir -p $main_dir 2> $lfc_stderr
echo "Check diagn: cannot create ...  File exists"
grep "File exists" $lfc_stderr > /dev/null

if [ $? == 0 ]; then 
   echo "Directory not exists, exit"
   cat $lfc_stderr
   echo "Test is failed"
   clear $main_dir
   exit $SAME_ERROR
fi
echo "OK"
clear $main_dir

echo
echo "1. Scenario: test -p option"
cdir="$main_dir/sub1/sub2/sub3/sub4"

echo "1.1. Noncorrect request  mkdir for chain subdirectories"
lfc-mkdir "$cdir/sub5" 2> $lfc_tmp
grep "cannot create" $lfc_tmp > /dev/null
if [ $? == 1 ]; then 
    echo "Noncorrect -p option"
    cat $lfc_tmp
    echo "Test is failed"
    clear $main_dir
    exit $SAME_ERROR
fi
echo "OK"

echo "1.2. Correct request with -p option"
lfc-mkdir  -p "$cdir/sub5"
lfc-ls -l $cdir
clear $main_dir
echo "Check lfc-ls after remove main directory"
lfc-ls -l $main_dir
echo "OK"

echo
echo "2. SCENARIO: check mode for make directory"

default="drwxrwxr-x"
echo "2.1. Check default mode: $default"
echo "Create direcrory: $main_dir"
 
lfc-mkdir -p $main_dir
lfc-mkdir $main_dir/default-mode
lfc-ls -l $main_dir > $lfc_tmp

grep $default $lfc_tmp > /dev/null
if [ $? == 1 ]; then 
    echo "Noncorrect default mode, must be: $default"
    echo "Created mode:"
    cat $lfc_tmp
    echo "Test is failed"
    clear $main_dir
    exit $SAME_ERROR
fi
echo "OK"
clear $main_dir/default-mode


echo "2.2.  Test check up 512 (000-777) variants of access mode for new subdirectory"
echo "SHORT=$SHORT, MODE=$MODE"

if [ $SHORT == 1 ]; then
    echo "Short mode: 000, 222, 333. 666, 777"
    cdir=$main_dir/short
    checkMode 0 0 0 $cdir
    checkMode 2 2 2 $cdir
    checkMode 3 3 3 $cdir
    checkMode 6 6 6 $cdir
    checkMode 7 7 7 $cdir
else
    echo "Long mode: all mode 000-nnn, n<$MODE"
    UMAX=$MODE
    
    owner=0
    cdir="$main_dir/qwerty"
    while [ $owner -lt $UMAX ]; do          	# cycle for owner access 
	group=0
	echo
	while [ $group -lt $UMAX ]; do      	# cycle for group access
	    user=0
	    echo
	    while [ $user -lt $UMAX ]; do	# cycle for all users
	        checkMode $owner $group $user $cdir
 		let user=$user+1
	    done
	    let group=$group+1
	done
	let owner=$owner+1
    done
fi

echo
echo "Cleaning tasks"
echo "<br>"
clear $main_dir
lfc-ls -l $main_dir
rm -rf $lfc_tmp
rm -rf $lfc_stderr

echo "Test OK"
echo "</pre>"
exit $SAME_OK
