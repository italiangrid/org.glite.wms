#!/usr/bin/env python
# The test has been developped by Robert Harakaly and changed for Nagios by Victor Galaktionov
# set last access time for a regular file to the current time (lfc_setatime) 
 
import os, lfc, sys, commands, time
from testClass import _test, _ntest

global testHome,lfc_vo 

class test_setatime_ok(_test):
    def info(self):
        return "Set access time on existing file"
    def prepare(self):
        guid = commands.getoutput('uuidgen').split('/n')[0]
        self.name = lfc_vo + "/python_setatime_test"
        ret = lfc.lfc_creatg(self.name,guid,0664)
        self.start=lfc.lfc_filestat()
        lfc.lfc_stat(self.name, self.start)
        
    def clean(self):
        lfc.lfc_unlink(self.name)
    def test(self):
        time.sleep(2)
        ret=lfc.lfc_setatime(self.name,None)
        stat=lfc.lfc_filestat()
        lfc.lfc_stat(self.name, stat)
        return (stat,ret)
    def ret(self):
        return self.start
    def compare(self, testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal == testRetVal):
            retval = retval & ( test.atime != ret.atime )
        else:
            retval = False
        return retval


class lfc_setatime_test:
    def __init__(self):
	self.name = "lfc_setatime_test"
        self.tests=[test_setatime_ok]

    def run(self):
        retVal = True
        for testclass in self.tests:
            testInstance = testclass()
            testInstance.prepare()
            ret1 = testInstance.compare(testInstance.test(), (testInstance.ret(), testInstance.getRetVal()))
            testInstance.clean()
            retVal = retVal & ret1
            if ret1:
                print "%-60s[OK]" % testInstance.info()
            else:
                print "%-60s[FAILED]" % testInstance.info()
        return retVal

#************* Interface for Nagios and Python tests ***************
print "<pre>"
print "Start test:  set last access time for a regular file to the current time (lfc_setatime) "
print "1. Prepare environment"

vo_name=os.environ['VO']
lfc_host = sys.argv[1]
lfc_home = lfc_host + ":/grid/" + vo_name

os.environ['LFC_HOME'] = lfc_home
os.environ['LFC_HOST'] = lfc_host

same_ok   = int(os.environ['STATE_OK'])
same_err  = int(os.environ['STATE_CRITICAL'])
lfc_vo    = "/grid/" + vo_name

print "2. Start test run()"
testHome = "python_lfc_test"
ret = lfc_setatime_test().run()

print "3. Ret test code: %s" % ret
print "Exit"
print "</pre>"

if ( ret == True ):
    print "Test is OK"
    sys.exit(same_ok)
else:
    print "Test is failure"
    sys.exit(same_err)
                        
