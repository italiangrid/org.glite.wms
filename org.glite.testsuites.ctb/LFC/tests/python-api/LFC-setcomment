#!/usr/bin/env python
# test has been developed by Robert Harakaly and changed for SAM by Victor Galaktionov 
# add/replace   a  comment  associated  with  a  LFC file/directory in the name server (lfc_setcomment) 
import os, lfc, sys, commands
from testClass import _test

global testHome, lfc_vo 

class test_setcomment_ok(_test):
    def info(self):
        return "Set file comment existing file name"
    def prepare(self):
        guid = commands.getoutput('uuidgen').split('/n')[0]
        self.name = lfc_vo + "/python_setcomment_test"
        ret = lfc.lfc_creatg(self.name,guid,0664)
    def clean(self):
        lfc.lfc_unlink(self.name)
        pass
    def test(self):
        self.comment="Test comment"
        comment="             "
        ret=lfc.lfc_setcomment(self.name,self.comment)
        lfc.lfc_getcomment(self.name, comment)
        return (comment.strip(),ret)
    def ret(self):
        return self.comment + '\x00'
    def compare(self, testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal == testRetVal):
            retval = retval & (ret == test)
        else:
            retval = False
        return retval

class test_update_comment(_test):
    def info(self):
        return "Update comment on existing file name"
    def prepare(self):
        guid = commands.getoutput('uuidgen').split('/n')[0]
        self.name = lfc_vo + "/python_setcomment_test"
        ret = lfc.lfc_creatg(self.name,guid,0664)
        lfc.lfc_setcomment(self.name,"Primary comment")
    def clean(self):
        lfc.lfc_unlink(self.name)
        pass
    def test(self):
        self.comment="Test comment"
        comment="             "
        ret=lfc.lfc_setcomment(self.name,self.comment)
        lfc.lfc_getcomment(self.name, comment)
        return (comment.strip(),ret)
    def ret(self):
        return self.comment + '\x00'
    def compare(self, testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal == testRetVal):
            retval = retval & (ret == test)
        else:
            retval = False
        return retval

class test_nonexisting_name(_test):
    def __init__(self):
        self.retVal = -1
    def info(self):
	return "Set comment on nonexisting file name: "
    def prepare(self):
        self.name="/fhgsdjfgsagfhs"
    def test(self):
        self.comment="Test comment"
        comment="                              "
        ret=lfc.lfc_setcomment(self.name,self.comment)
        lfc.lfc_getcomment(self.name, comment)
        return (comment.strip(),ret)
    def ret(self):
        return ""

    def compare(self, testVal, retVal):
        (ret, retRetVal) = retVal
        (test, testRetVal) = testVal
        retval = True
        if (retRetVal == testRetVal):
            retval = (ret == test)
        else:
            retval = False
        return retval


class lfc_setcomment_test:
    def __init__(self):
	self.name = "lfc_setcomment_test"
        self.tests=[test_setcomment_ok, test_update_comment, test_nonexisting_name]

    def run(self):
        retVal = True
        for testclass in self.tests:
            testInstance = testclass()
            testInstance.prepare()
            ret1 = testInstance.compare(testInstance.test(), (testInstance.ret(), testInstance.getRetVal()))
            testInstance.clean()
            retVal = retVal & ret1
            if ret1:
                print "%-60s[OK]" % testInstance.info()
            else:
                print "%-60s[FAILED]" % testInstance.info()
        return retVal


#os.environ['LFC_HOME'] = 'lxb1941.cern.ch:/grid/dteam'
#os.environ['LFC_HOST'] = 'lxb1941.cern.ch'
#testHome = "python_lfc_test"
#lfc_setcomment_test().run()

#************* Interface for SAM and Python tests ***************
print "<pre>"
print "Start test: add/replace   a  comment  associated  with  a  LFC file/directory in the name server (lfc_setcomment) "
print "1. Prepare environment"

vo_name=os.environ['SAME_VO']
lfc_host = sys.argv[1]
lfc_home = lfc_host + ":/grid/" + vo_name

os.environ['LFC_HOME'] = lfc_home
os.environ['LFC_HOST'] = lfc_host

same_ok   = int(os.environ['SAME_OK'])
same_err  = int(os.environ['SAME_ERROR'])
lfc_vo    = "/grid/" + vo_name

print "2. Start test run()"
ret = lfc_setcomment_test().run() 

print "3. Ret test code: %s" % ret
print "Exit"
print "</pre>"

if ( ret == True ):
    print "Test is OK"
    sys.exit(same_ok)
else:
    print "Test is failure"
    sys.exit(same_err)
                        