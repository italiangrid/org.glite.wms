#!/bin/sh

log() {
  echo "`date`: $1"
}
                                                                                             
test_bug22222_pre () {
 echo
# Check for variables that are needed in test_bug1 and which should be defined globally in
# the *sh that is sourced in regTest
# Return REGTEST_FAIL if something is not O.K. otherwise return $REGTEST_OK
log "Testing a list-match for a simple job"
}
                                                                                                                                                                                                                                       
test_bug22222_post () {
 echo
# Cleanup after running test_bug1. Unset all variables that were set in test_bug1
# Delete files created during the test run.
#list_time
#avg_list_time
#celist
#report_name
#jdl
                                                                                                                   
if [ "x$list_time" == "xERROR" ]; then
        #log "failed"
        report_line "$jdl" "test failed" $report_name
        report_line "$jdl" "$error_msg" $report_name
        echo "error msg: $error_msg"
else
        #log "success"
        report_line "$jdl" "Average Real Time $avg_list_time sec" $report_name
        n=1
        if [ "$celist" == "" ]; then
          report_line "$jdl" "No Computing Element matching your job requirements has been found!" $report_name    
        else 
        for ce in $celist; do
          report_line "$jdl" "CE$n: $ce" $report_name
          n=`expr $n + 1`
        done
        fi
fi
report_footer $report_name
cd - >/dev/null
}
                                                                                                                   
                                                                                                                   
test_bug22222 () {
# Main test
# Return values REGTEST_FAIL, REGTEST_TIMEOUT or REGTEST_OK

 
exit_code=-1
app_path=`pwd`
celist="N/A"
list_time="N/A"
avg_list_time=0
nlist=5
error_msg="N/A"

sanity_check() { # 1 - test_dir  2 - wms.conf
  bad=0
  if [ -z $1 ]; then
    bad=1
  else
    if [ -z $2 ]; then
      bad=1
    fi
  fi
  if [ $bad -eq 1 ]; then
    echo "usage: testplan_list test_dir wms.conf"
    return 1
  fi
  if [ -r "$app_path/config/testplan_functions" ]; then
    . $app_path/config/testplan_functions
  else 
    echo "File testplan_functions not found. Quitting.."
    return 1          
  fi 
  return 0
}

sanity_check $1 $2 
if [ $? -eq 0 ]; then
	report_name="$app_path/reports/report${bugNr}.html"
	rm -rf $report_name
	report_header "Test results: list-match"  $report_name
	cd $1
	#for jdl in `find . -name \*jdl -maxdepth 1 -type f`; do
      jdl=echo.jdl
    log "processing $jdl"
    i=0
    while [ $i -lt $nlist ]; do
      list_match_single_job $jdl $app_path/$2 
      if [ "x$celist" == "xERROR" ]; then
           echo "list-match could not be performed"
           return 1
           break
      fi 
      if [ "x$list_time" != "xERROR" ] && [ "x$list_time" != "xN/A" ]; then 
        avg_list_time=`echo "scale=2 ; $avg_list_time + $list_time"|bc -l`
      else
        avg_list_time=$list_time
        break;
      fi
      i=`expr $i + 1`
    done
    if [ "x$avg_list_time" != "xERROR" ] && [ "x$avg_list_time" != "xN/A" ]; then
      avg_list_time=`echo "scale=2 ; $avg_list_time / $nlist"|bc -l`
    fi
    base="${jdl:0:${#jdl}-4}"
    if [ -r "${base}_list_pre" ]; then
      . "${base}_list_pre" # precondition
    fi
        #done
fi
}
