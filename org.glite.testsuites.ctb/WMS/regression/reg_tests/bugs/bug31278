#!/bin/sh
##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# AUTHORS: Alejandro Alvarez Ayllon, CERN
# LINK:    https://savannah.cern.ch/bugs/?31278
#
##############################################################################

log() {
  echo "`date`: $1"
}

test_bug31278_pre () {
# Check for variables that are needed in test_bug1 and which should be defined globally in
# the *sh that is sourced in regTest
# Return REGTEST_FAIL if something is not O.K. otherwise return $REGTEST_OK
  return $REGTEST_OK
}
                                                                                                                      
test_bug31278_post () {
  report_footer $report_name
  cd - >/dev/null
}


test_bug31278 () {
  # Main test
  # Return values REGTEST_FAIL, REGTEST_TIMEOUT or REGTEST_OK

  app_path=`pwd`
                                                                                                  
  sanity_check() { # 1 - test_dir  2 - wms.conf
    bad=0
    if [ -z $1 ]; then
      bad=1
    else
      if [ -z $2 ]; then
        bad=1
      fi
    fi
    if [ $bad -eq 1 ]; then
      echo "usage: testplan_list test_dir wms.conf"
      return 1
    fi
    if [ -r "$app_path/config/testplan_functions" ]; then
      . $app_path/config/testplan_functions
    else
      echo "File testplan_functions not found. Quitting..."
      return 1
    fi
    
    return 0
  }
                                                           
  sanity_check $1 $2
  if [ $? -eq 0 ]; then
	  report_name="$app_path/reports/report31278.html"
	  rm -rf $report_name
    report_header "Test results: WMS should prevent non-SDJ jobs from being scheduled on SDJ CEs"  $report_name
	  cd $1

    # Submit a SDJ job
    jdl="31278_sdj.jdl"
    log "processing $jdl"
    submit_single_job $jdl "$app_path/$2"
    if [ "x$jobid" == "xERROR" ]; then
      log "got an error while submitting..."
      report_line $jdl "got an error while submitting" $report_name
      return $REGTEST_FAIL
    else
      log "job submitted with id: $jobid"
    fi
    rm -f $tmpfile

    # Recover the requirements line from the generated JDL
    sdjReq=`glite-wms-job-info --jdl $jobid | grep -i requirements`

    # Test if it has the desired value
    echo $sdjReq | grep "RegExp(\".*sdj$\",other.GlueCEUniqueID);"
    if [ $? -eq 1 ]; then
      log "The requirements line is invalid"
      report_line $jdl "The requirements line is invalid" $report_name
      return $REGTEST_FAIL
    else
       report_line $jdl "The requirements line is valid" $report_name
    fi

    # Cancel
    glite-wms-job-cancel $jobid

    # Submit a NON-SDJ job
    jdl="31278_no_sdj.jdl"
    log "processing $jdl"
    submit_single_job $jdl "$app_path/$2"
    if [ "x$jobid" == "xERROR" ]; then
      log "got an error while submitting..."
      report_line $jdl "got an error while submitting" $report_name
      return $REGTEST_FAIL
    else
      log "job submitted with id: $jobid"
    fi
    rm -f $tmpfile

    # Recover the requirements line from the generated JDL
    sdjReq=`glite-wms-job-info --jdl $jobid | grep -i requirements`

    # Test if it has the desired value
    echo $sdjReq | grep "!RegExp(\".*sdj$\",other.GlueCEUniqueID);"
    if [ $? -eq 1 ]; then
      log "The requirements line is invalid"
      report_line $jdl "The requirements line is invalid" $report_name
      return $REGTEST_FAIL
    else
       report_line $jdl "The requirements line is valid" $report_name
    fi

    # Cancel
    glite-wms-job-cancel $jobid

    return $REGTEST_OK
  fi
}
