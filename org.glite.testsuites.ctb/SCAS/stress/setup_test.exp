
puts "EXPECT start"

#Disable output from Expect
puts "Disablig output"
#log_user 0

#Open the password file
set passwd_file_name "[lindex $argv 0]"
set passwd_file [open $passwd_file_name r]

set node_setup_file "[lindex $argv 1]"

set nodes_log_destination "[lindex $argv 2]"

#Retrieve AFS credentials
gets $passwd_file line
set afs_user [lindex [split $line ":"] 0]
set afs_passwd [lindex [split $line ":"] 1]

#Retrieve machines and passwords and store them in two arrays
set i 0
while {[gets $passwd_file line] >= 0} {
  set machines($i) [lindex [split $line ":"] 0]
  set passwds($machines($i))  [lindex [split $line ":"] 1]
  incr i
}
close $passwd_file

#foreach element [lsort [array names machines]] {
#  puts $machines($element)
# puts $passwds($machines($element))
#}

#For each machine:
# - login with ssh
# - get the AFS token
# - run the setup node script with an index as argument
set i 0
foreach element [lsort [array names machines]] {
  incr i
  puts "-------$machines($element)-------"
  spawn ssh -2 root@$machines($element)
  expect "Enter passphrase for key" {send "$passwds($machines($element))\r"}
  expect "#" {send "hostname\r"}
  expect "$machines($element)" {send "klog $afs_user\r"}
  expect "Password:" {send "$afs_passwd\r"}
  expect "#" {send "cp --reply=yes $node_setup_file ./\r"
              puts "AFS Token got for $machines($element)"
              send "echo $?\r"} \
         "Unable to authenticate" {puts "Error while getting AFS token on $machines($element)"
                                   exit 1}
  expect "0" {send "chmod u+x ./setup_node.sh\r"}
  expect "#" {send "./setup_node.sh $i $nodes_log_destination/$machines($element)\r"
              send "echo $?\r"}
  expect "0" {puts "Node setup script successfully executed"
              send "touch $nodes_log_destination/$machines($element)\r" } \
         "1" {puts "Error retrieving the setup_node script"
              exit 1}
  expect "#" {send "ls $nodes_log_destination/$machines($element)\r"
              send "echo $?\r"}
  expect "0" {puts "Log file created"} \
         "1" {puts "Error in file creation"
              exit 1}
  send_user "Process $spawn_id succeeded\n"
}
exit 0

